<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[浏览器首页被hao.qquu8.com劫持]]></title>
      <url>http://rayuu.com/2017/03/09/chromehao123/</url>
      <content type="html"><![CDATA[<p>昨天帮一个同学找了一个小马激活工具，今天早上电脑一开机，打开浏览器就发现首页变为了</p>
<p><a href="http://hao.qquu8.com/" target="_blank" rel="external">http://hao.qquu8.com/</a> 然后跳转到hao123。</p>
<a id="more"></a>
<p>心想还是要支持正版系统啊！</p>
<p>我首先是改浏览器的配置，把chrome的首页设置为打开新的标签页，结果操作无效。</p>
<p>紧接着我分别删除了桌面和任务栏chrome的快捷方式，属性快捷方式目标后面跟的<a href="http://hao.qquu8.com/?m=yx&amp;r=j这个链接。" target="_blank" rel="external">http://hao.qquu8.com/?m=yx&amp;r=j这个链接。</a></p>
<p><code>&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</code>只保留这个，还有任务栏的地址在</p>
<pre><code>C:\Users\rayu\AppData\Roaming\Microsoft\Internet Explorer\Quick Launch

C:\Users\rayu\AppData\Roaming\Microsoft\Internet Explorer\Quick Launch\User Pinned\TaskBar
</code></pre><p>这两个地方的<a href="http://hao.qquu8.com/也删除了。" target="_blank" rel="external">http://hao.qquu8.com/也删除了。</a></p>
<p><img src="http://blog.rayuu.com/usr/uploads/2017/03/1570470093.png" alt="a"></p>
<p>这时候打开浏览器不会跳转到hao123了，我以为战斗结束了，也就没去管他了。</p>
<p>过了几个小时，我把浏览器关掉重新打开，发现又出现了hao123首页。</p>
<p>这我就不淡定了，强迫症又犯了。</p>
<p>开始网上找解决方案。</p>
<p>参考文章：<a href="http://xinghao.me/2016/03/01/2016-03-01-kill-hao123/" target="_blank" rel="external">http://xinghao.me/2016/03/01/2016-03-01-kill-hao123/</a></p>
<p>我其实就是按照上面链接里的方法来做的。</p>
<p>不过还是要自己记录一下是怎么做的。</p>
<h3 id="1、用WMI-Event-Viewer查看WMI事件。下载地址：http-down-cncrk-com-8080-soft-keygen-WMITools-zip"><a href="#1、用WMI-Event-Viewer查看WMI事件。下载地址：http-down-cncrk-com-8080-soft-keygen-WMITools-zip" class="headerlink" title="1、用WMI Event Viewer查看WMI事件。下载地址：http://down.cncrk.com:8080/soft/keygen/WMITools.zip"></a>1、用WMI Event Viewer查看WMI事件。下载地址：<a href="http://down.cncrk.com:8080/soft/keygen/WMITools.zip" target="_blank" rel="external">http://down.cncrk.com:8080/soft/keygen/WMITools.zip</a></h3><h3 id="2、用管理员打开wbemeventviewer-exe，在root-CIMV2里面选择-EventConsumer-gt-ActiveScriptEventConsumer"><a href="#2、用管理员打开wbemeventviewer-exe，在root-CIMV2里面选择-EventConsumer-gt-ActiveScriptEventConsumer" class="headerlink" title="2、用管理员打开wbemeventviewer.exe，在root\CIMV2里面选择_EventConsumer -&gt; ActiveScriptEventConsumer"></a>2、用管理员打开wbemeventviewer.exe，在root\CIMV2里面选择_EventConsumer -&gt; ActiveScriptEventConsumer</h3><p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2017/03/1824951337.png" alt="2"></p>
<p>双击ActiveScriptEventConsumer.Name=”VBScriptKids_consumer”，弹出属性页面：</p>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2017/03/3738714703.png" alt="3"></p>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2017/03/991659301.png" alt="4"></p>
<p>在 ScriptText里面看见了hao.qquu8.com/?m=yx&amp;r=j这一串代码。</p>
<p>然后把它删掉，或者直接在WMI event viewer中将“_EventFilter:Name=”unown_filter””项目右键删除！</p>
<p>这样问题就解决了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[换了一个新主题]]></title>
      <url>http://rayuu.com/2016/12/08/newtheme/</url>
      <content type="html"><![CDATA[<h1 id="换了一个新主题"><a href="#换了一个新主题" class="headerlink" title="换了一个新主题"></a>换了一个新主题</h1><p>感觉自己萌萌哒！！！！</p>
<a id="more"></a>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[利用pyqt4编写cs计算工具]]></title>
      <url>http://rayuu.com/2016/12/03/calcspyqt/</url>
      <content type="html"><![CDATA[<p>利用pyqt4编写cs计算工具</p>
<p>之前用Python做了一个通道号查找的小程序，只不过没有做界面。</p>
<p>最近的一个项目要用到帧校验（CS），为了方便，写了一个计算的小程序。</p>
<a id="more"></a>
<p>该程序用了QT4来做界面，也算是我的第一个QT小程序。</p>
<p>现在来分享一下编写过程中的心得体会，以及遇到的坑。</p>
<p>Python的环境是2.7。</p>
<p>CS校验和的C代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************</span><br><span class="line">*校验码 将所有相加MOD 256</span><br><span class="line">*******************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">Get_csckNum</span><span class="params">( <span class="keyword">unsigned</span> <span class="keyword">char</span> *Ptr, <span class="keyword">unsigned</span> <span class="keyword">char</span> Len )</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">register</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> Num;</span><br><span class="line">	Num = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>( Len &gt; <span class="number">0</span> )</span><br><span class="line">	&#123;</span><br><span class="line">		Num += *Ptr;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d--%d\n"</span>,Len,Num);</span><br><span class="line">		Ptr++;</span><br><span class="line">		Len--;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> Num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>转为Python代码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CalCS</span><span class="params">(self,inputstr)</span>:</span></span><br><span class="line">       input = inputstr.replace(<span class="string">" "</span>, <span class="string">""</span>)</span><br><span class="line">       content = []</span><br><span class="line">       <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(input), <span class="number">2</span>):</span><br><span class="line">           content.append(input[i:i + <span class="number">2</span>])</span><br><span class="line">       <span class="keyword">print</span> content</span><br><span class="line">       int_list = [int(i, <span class="number">16</span>) <span class="keyword">for</span> i <span class="keyword">in</span> content]</span><br><span class="line">       <span class="keyword">print</span> int_list</span><br><span class="line">       num = <span class="number">0</span></span><br><span class="line">       <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(int_list)):</span><br><span class="line">           num = num + int(int_list[i])</span><br><span class="line">       <span class="keyword">return</span> hex(num % <span class="number">256</span>)</span><br></pre></td></tr></table></figure></p>
<h2 id="一、软件界面设计"><a href="#一、软件界面设计" class="headerlink" title="一、软件界面设计"></a>一、软件界面设计</h2><p>我用的是QT Designer来进行界面的绘制，第一次用。但是感觉直接写代码来绘制图形界面提升的会更快。<br>首先打开QT designer，添加需要用到的小组件。<br>最终我的设计界面如下：</p>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2016/12/684297600.png" alt=""></p>
<p>界面绘制完成后，保存会生成一个后缀名为.ui的文件。</p>
<h2 id="二、Python程序的编写"><a href="#二、Python程序的编写" class="headerlink" title="二、Python程序的编写"></a>二、Python程序的编写</h2><p>界面完成后，进行框架的导入。<br>开始编写程序。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> division</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt4 <span class="keyword">import</span> QtCore, QtGui,uic</span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> uicode <span class="keyword">import</span> *</span><br><span class="line">qtCreatorFile = <span class="string">"calc.ui"</span> <span class="comment"># Enter file here.</span></span><br><span class="line">Ui_MainWindow, QtBaseClass = uic.loadUiType(qtCreatorFile)</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span><span class="params">(QtGui.QMainWindow, Ui_MainWindow)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        QtGui.QMainWindow.__init__(self)</span><br><span class="line">        Ui_MainWindow.__init__(self)</span><br><span class="line">        self.setupUi(self)</span><br><span class="line">        self.calc_button.clicked.connect(self.CalculateTax)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">CalculateTax</span><span class="params">(self)</span>:</span></span><br><span class="line">        content = str(self.content_box.toPlainText())</span><br><span class="line">        total = self.CalCS(content)</span><br><span class="line">        total_string = <span class="string">""</span> + str(total)</span><br><span class="line">        self.results_window.setText(total_string)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">CalCS</span><span class="params">(self,inputstr)</span>:</span></span><br><span class="line">        input = inputstr.replace(<span class="string">" "</span>, <span class="string">""</span>)</span><br><span class="line">        content = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(input), <span class="number">2</span>):</span><br><span class="line">            content.append(input[i:i + <span class="number">2</span>])</span><br><span class="line">        <span class="comment"># print content</span></span><br><span class="line">        int_list = [int(i, <span class="number">16</span>) <span class="keyword">for</span> i <span class="keyword">in</span> content]</span><br><span class="line">        <span class="comment"># print int_list</span></span><br><span class="line">        num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(int_list)):</span><br><span class="line">            num = num + int(int_list[i])</span><br><span class="line">        <span class="keyword">return</span> hex(num % <span class="number">256</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app = QtGui.QApplication(sys.argv)</span><br><span class="line">    window = MyApp()</span><br><span class="line">    window.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure></p>
<p>至此，最简单的程序就编写完成了。</p>
<h2 id="三、生成exe可执行程序"><a href="#三、生成exe可执行程序" class="headerlink" title="三、生成exe可执行程序"></a>三、生成exe可执行程序</h2><p>利用pyinstaller直接生成。<br>命令代码：</p>
<pre><code>pyinstaller -w -F main.py
</code></pre><p>具体见下面链接<br><a href="http://blog.rayuu.com/pyinstaller_py2exe_exe.html" target="_blank" rel="external">http://blog.rayuu.com/pyinstaller_py2exe_exe.html</a><br>但是在生成的过程中会报错，原因是.ui的界面代码没有打包到exe文件里面去。</p>
<p>所以不得不另辟蹊径。</p>
<p>在网上找了好久资料。最后的解决方法如下：</p>
<blockquote>
<p>1、首先尝试在QT Designer下直接生成代码。</p>
</blockquote>
<p>在菜单栏，窗体，查看代码下。</p>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2016/12/2989482191.png" alt=""></p>
<p>结果运行报错。</p>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2016/12/815996677.png" alt=""></p>
<p>可能实在安装过程中出了错误，安装位置好像不能有中文和空格。</p>
<p>接着尝试第二种方式。</p>
<blockquote>
<p>2、利用uic路径下的pyuic.py生成代码</p>
</blockquote>
<p>在生成ui文件后，利用\Python27\Lib\site-packages\PyQt4\uic下面的pyuic.py进行生成代码。</p>
<pre><code>pyuic4 -o ui_xxx.py xxx.ui
</code></pre><p>也可以用pycharm进行转换。</p>
<p>也可以写一个批处理文件进行快速转换，把下面的批处理文件放置在UIC目录下。</p>
<p>接着把需要转换的ui文件拖入到批处理文件打开，就可以转换成功了。</p>
<p>我的是在D盘目录下，所以里面的代码自行修改。</p>
<pre><code>@echo off
@cd /d &quot;%~dp0&quot;
pyuic4 %1 &gt; %~n1.py
</code></pre><p>这样代码就转换成功了。</p>
<p>本次生成的界面代码文件名称为 <code>uicode.py</code></p>
<p>下面修改代码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> division</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt4 <span class="keyword">import</span> QtCore, QtGui,uic</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 从uicode.py里面导入界面代码</span></span><br><span class="line"><span class="keyword">from</span> uicode <span class="keyword">import</span> *</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span><span class="params">(QtGui.QMainWindow)</span>:</span></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,parent=None)</span>:</span></span><br><span class="line">        QtGui.QWidget.__init__(self,parent)</span><br><span class="line">        <span class="comment"># 重载</span></span><br><span class="line">        self.ui=Ui_MainWindow()</span><br><span class="line">        self.ui.setupUi(self)</span><br><span class="line">        self.ui.calc_button.clicked.connect(self.CalculateTax)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">CalculateTax</span><span class="params">(self)</span>:</span></span><br><span class="line">        content = str(self.ui.content_box.toPlainText())</span><br><span class="line">        total = self.CalCS(content)</span><br><span class="line">        total_string = <span class="string">""</span> + str(total)</span><br><span class="line">        self.ui.results_window.setText(total_string)</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">CalCS</span><span class="params">(self,inputstr)</span>:</span></span><br><span class="line">        input = inputstr.replace(<span class="string">" "</span>, <span class="string">""</span>)</span><br><span class="line">        content = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(input), <span class="number">2</span>):</span><br><span class="line">            content.append(input[i:i + <span class="number">2</span>])</span><br><span class="line">        <span class="comment"># print content</span></span><br><span class="line">        int_list = [int(i, <span class="number">16</span>) <span class="keyword">for</span> i <span class="keyword">in</span> content]</span><br><span class="line">        <span class="comment"># print int_list</span></span><br><span class="line">        num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(int_list)):</span><br><span class="line">            num = num + int(int_list[i])</span><br><span class="line">        <span class="keyword">return</span> hex(num % <span class="number">256</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    app = QtGui.QApplication(sys.argv)</span><br><span class="line">    window = MyApp()</span><br><span class="line">    window.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure></p>
<p>最后重新打包生成exe文件就可以直接运行了。</p>
<p>只是打包的库比较多，所以最后的程序大小有10几兆。</p>
<p>最后：</p>
<p>另外，如果界面需要加载资源文件的话，还要进行另外的操作，把资源文件转为.qrc后缀的文件。</p>
<p><a href="http://www.cnblogs.com/dcb3688/p/4237121.html" target="_blank" rel="external">http://www.cnblogs.com/dcb3688/p/4237121.html</a></p>
<p>转换资源文件用的是<code>Pyqt</code>的<code>pyrcc4</code>命令</p>
<pre><code>pyrcc4 qrcfile.qrc -o  pyfile.py
</code></pre><blockquote>
<p>1.Pycharm集成pyrcc4</p>
</blockquote>
<p>我们使用Pycharm来集成pyrcc4，这样更利于我们高效开发</p>
<p>首先在菜单里面找到 <code>File =&gt; settings =&gt; Tools =&gt; External Tools</code>   （外边工具设置）</p>
<p>选择添加Add </p>
<p>Name 填写： Rcc2Py</p>
<p>Group： 自已任意填写，我填写的是PyQt4</p>
<p>下面的Options默认</p>
<p>在Tools settings 里面这样填写：</p>
<p>Program 就是你安装Pyqt4的路径</p>
<p>Parameters 是指转换的参数      $FileName$ -o $FileNameWithoutExtension$.py</p>
<p>Working directory 表示输出在当前的工作目录   $FileDir$</p>
<blockquote>
<p>2.转换qrc为py</p>
</blockquote>
<p>选择要转换的qrc文件，右键，找到group 为（PyQt4） 目录下的Rcc2Py </p>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2016/12/3304270685.jpg" alt=""></p>
<p>转换完成后，同级目录下就多出一个与qrc文件同命名的py文件。</p>
<blockquote>
<p>3、引用资源py文件</p>
</blockquote>
<p>py文件生成好了如何来引用使用呢？</p>
<p>说对了，引用就这么简单</p>
<pre><code>import uicode
</code></pre><p>使用的时候 冒号 “   ： ”  加 图片的路径， 如：</p>
<pre><code>:/img/firefox.png
</code></pre><p>运行试试，发现图片不显示，为什么呢，因为qrc文件添加过程中，我加了一个 “前缀” prefix。<br>所以，如果在qrc文件中不添加前缀 使用   <code>:/img/firefox.png</code> 是可以的，但添加了前缀生成的qrc文件 qresource标签会多一个属性</p>
<pre><code>qresource prefix=&quot;picture&quot;
</code></pre><p>在这里，正确的使用是：</p>
<pre><code>:picture/img/firefox.png
</code></pre><p>附：<code>uicode.py</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Form implementation generated from reading ui file 'C:\Users\jx007\Desktop\PyQt_first-master\calc.ui'</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Created by: PyQt4 UI code generator 4.11.4</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># WARNING! All changes made in this file will be lost!</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> PyQt4 <span class="keyword">import</span> QtCore, QtGui</span><br><span class="line"><span class="comment"># 导入资源</span></span><br><span class="line"><span class="keyword">import</span> sources</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">     _fromUtf8 = QtCore.QString.fromUtf8</span><br><span class="line"><span class="keyword">except</span> AttributeError:</span><br><span class="line">     <span class="function"><span class="keyword">def</span> <span class="title">_fromUtf8</span><span class="params">(s)</span>:</span></span><br><span class="line">          <span class="keyword">return</span> s</span><br><span class="line"> </span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">	_encoding = QtGui.QApplication.UnicodeUTF8</span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">_translate</span><span class="params">(context, text, disambig)</span>:</span></span><br><span class="line">		<span class="keyword">return</span> QtGui.QApplication.translate(context, text, disambig, _encoding)</span><br><span class="line"><span class="keyword">except</span> AttributeError:</span><br><span class="line">     <span class="function"><span class="keyword">def</span> <span class="title">_translate</span><span class="params">(context, text, disambig)</span>:</span></span><br><span class="line">          <span class="keyword">return</span> QtGui.QApplication.translate(context, text, disambig)</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ui_MainWindow</span><span class="params">(object)</span>:</span></span><br><span class="line">     <span class="function"><span class="keyword">def</span> <span class="title">setupUi</span><span class="params">(self, MainWindow)</span>:</span></span><br><span class="line">           MainWindow.setObjectName(_fromUtf8(<span class="string">"MainWindow"</span>))</span><br><span class="line">			MainWindow.resize(<span class="number">700</span>, <span class="number">240</span>)</span><br><span class="line">			icon = QtGui.QIcon()</span><br><span class="line">			<span class="comment"># icon.addPixmap(QtGui.QPixmap(_fromUtf8("ico.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)</span></span><br><span class="line">			icon.addPixmap(QtGui.QPixmap(_fromUtf8(<span class="string">":ico/ico.png"</span>)), QtGui.QIcon.Normal, QtGui.QIcon.Off)</span><br><span class="line">			MainWindow.setWindowIcon(icon)</span><br><span class="line">			self.centralwidget = QtGui.QWidget(MainWindow)</span><br><span class="line">			self.centralwidget.setObjectName(_fromUtf8(<span class="string">"centralwidget"</span>))</span><br><span class="line">			self.gridLayout = QtGui.QGridLayout(self.centralwidget)</span><br><span class="line">			self.gridLayout.setObjectName(_fromUtf8(<span class="string">"gridLayout"</span>))</span><br><span class="line">			self.label_3 = QtGui.QLabel(self.centralwidget)</span><br><span class="line">			font = QtGui.QFont()</span><br><span class="line">			font.setPointSize(<span class="number">20</span>)</span><br><span class="line">			font.setBold(<span class="keyword">True</span>)</span><br><span class="line">			font.setWeight(<span class="number">75</span>)</span><br><span class="line">			self.label_3.setFont(font)</span><br><span class="line">			self.label_3.setObjectName(_fromUtf8(<span class="string">"label_3"</span>))</span><br><span class="line">			self.gridLayout.addWidget(self.label_3, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">			self.label = QtGui.QLabel(self.centralwidget)</span><br><span class="line">			font = QtGui.QFont()</span><br><span class="line">			font.setPointSize(<span class="number">10</span>)</span><br><span class="line">			font.setBold(<span class="keyword">True</span>)</span><br><span class="line">			font.setWeight(<span class="number">75</span>)</span><br><span class="line">			self.label.setFont(font)</span><br><span class="line">			self.label.setObjectName(_fromUtf8(<span class="string">"label"</span>))</span><br><span class="line">			self.gridLayout.addWidget(self.label, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">			self.content_box = QtGui.QTextEdit(self.centralwidget)</span><br><span class="line">			font = QtGui.QFont()</span><br><span class="line">			font.setFamily(_fromUtf8(<span class="string">"Times New Roman"</span>))</span><br><span class="line">			font.setPointSize(<span class="number">10</span>)</span><br><span class="line">			font.setBold(<span class="keyword">False</span>)</span><br><span class="line">			font.setWeight(<span class="number">50</span>)</span><br><span class="line">			self.content_box.setFont(font)</span><br><span class="line">			self.content_box.setObjectName(_fromUtf8(<span class="string">"content_box"</span>))</span><br><span class="line">			self.gridLayout.addWidget(self.content_box, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">			self.calc_button = QtGui.QPushButton(self.centralwidget)</span><br><span class="line">			self.calc_button.setObjectName(_fromUtf8(<span class="string">"calc_button"</span>))</span><br><span class="line">			self.gridLayout.addWidget(self.calc_button, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">			self.label_2 = QtGui.QLabel(self.centralwidget)</span><br><span class="line">			font = QtGui.QFont()</span><br><span class="line">			font.setPointSize(<span class="number">10</span>)</span><br><span class="line">			font.setBold(<span class="keyword">True</span>)</span><br><span class="line">			font.setWeight(<span class="number">75</span>)</span><br><span class="line">			self.label_2.setFont(font)</span><br><span class="line">			self.label_2.setObjectName(_fromUtf8(<span class="string">"label_2"</span>))</span><br><span class="line">			self.gridLayout.addWidget(self.label_2, <span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">			self.results_window = QtGui.QTextEdit(self.centralwidget)</span><br><span class="line">			font = QtGui.QFont()</span><br><span class="line">			font.setFamily(_fromUtf8(<span class="string">"Times New Roman"</span>))</span><br><span class="line">			font.setPointSize(<span class="number">14</span>)</span><br><span class="line">			font.setBold(<span class="keyword">False</span>)</span><br><span class="line">			font.setWeight(<span class="number">50</span>)</span><br><span class="line">			self.results_window.setFont(font)</span><br><span class="line">			self.results_window.setObjectName(_fromUtf8(<span class="string">"results_window"</span>))</span><br><span class="line">			self.gridLayout.addWidget(self.results_window, <span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">			MainWindow.setCentralWidget(self.centralwidget)</span><br><span class="line">			self.menubar = QtGui.QMenuBar(MainWindow)</span><br><span class="line">			self.menubar.setGeometry(QtCore.QRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">700</span>, <span class="number">23</span>))</span><br><span class="line">			self.menubar.setObjectName(_fromUtf8(<span class="string">"menubar"</span>))</span><br><span class="line">			MainWindow.setMenuBar(self.menubar)</span><br><span class="line">			self.statusbar = QtGui.QStatusBar(MainWindow)</span><br><span class="line">			self.statusbar.setObjectName(_fromUtf8(<span class="string">"statusbar"</span>))</span><br><span class="line">			MainWindow.setStatusBar(self.statusbar)</span><br><span class="line"> </span><br><span class="line">			self.retranslateUi(MainWindow)</span><br><span class="line">			QtCore.QMetaObject.connectSlotsByName(MainWindow)</span><br><span class="line"> </span><br><span class="line">     <span class="function"><span class="keyword">def</span> <span class="title">retranslateUi</span><span class="params">(self, MainWindow)</span>:</span></span><br><span class="line">          MainWindow.setWindowTitle(_translate(<span class="string">"MainWindow"</span>, <span class="string">"CS Calculator By:Rayu 2016-11-24"</span>, <span class="keyword">None</span>))</span><br><span class="line">          self.label_3.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"CS Calculator"</span>, <span class="keyword">None</span>))</span><br><span class="line">          self.label.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"Text"</span>, <span class="keyword">None</span>))</span><br><span class="line">          self.calc_button.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"Calculate"</span>, <span class="keyword">None</span>))</span><br><span class="line">          self.label_2.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"Result"</span>, <span class="keyword">None</span>))</span><br><span class="line">          self.results_window.setHtml(_translate(<span class="string">"MainWindow"</span>, <span class="string">"&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\"&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;html&gt;&lt;head&gt;&lt;meta name=\"qrichtext\" content=\"1\" /&gt;&lt;style type=\"text/css\"&gt;\n"</span></span><br><span class="line"><span class="string">"p, li &#123; white-space: pre-wrap; &#125;\n"</span></span><br><span class="line"><span class="string">"&lt;/style&gt;&lt;/head&gt;&lt;body style=\" font-family:\'Times New Roman\'; font-size:14pt; font-weight:400; font-style:normal;\"&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt;/******************************************************************&lt;/span&gt;&lt;/p&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt;*校验码 将所有相加MOD 256 &lt;/span&gt;&lt;/p&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt;*******************************************************************/&lt;/span&gt;&lt;/p&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt;unsigned char Get_csckNum( unsigned char *Ptr, unsigned char Len )&lt;/span&gt;&lt;/p&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt;&#123;&lt;/span&gt;&lt;/p&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt; register unsigned char Num;&lt;/span&gt;&lt;/p&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt; &lt;/span&gt;&lt;/p&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt; Num = 0;&lt;/span&gt;&lt;/p&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt; while( Len &gt; 0 )&lt;/span&gt;&lt;/p&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt; &#123;&lt;/span&gt;&lt;/p&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt; Num += *Ptr;&lt;/span&gt;&lt;/p&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt; printf("</span>%d--%d\\n<span class="string">",Len,Num);&lt;/span&gt;&lt;/p&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt; Ptr++;&lt;/span&gt;&lt;/p&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt; Len--;&lt;/span&gt;&lt;/p&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt; &#125;&lt;/span&gt;&lt;/p&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt; return Num;&lt;/span&gt;&lt;/p&gt;\n"</span></span><br><span class="line"><span class="string">"&lt;p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"&gt;&lt;span style=\" font-family:\'SimSun\'; font-size:9pt;\"&gt;&#125;&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"</span>, <span class="keyword">None</span>))</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[单片机串口通讯RXD与TXD如何对接]]></title>
      <url>http://rayuu.com/2016/11/30/mcurs232/</url>
      <content type="html"><![CDATA[<p> 单片机串口通讯RXD与TXD如何对接</p>
<blockquote>
<p>串口直通线和交叉线的区别</p>
</blockquote>
<h3 id="1：串口交叉线"><a href="#1：串口交叉线" class="headerlink" title="1：串口交叉线"></a>1：串口交叉线</h3><p>串口线两头都一样都相同。都是公对公或者母对母串口线，这种线必须是交叉线。</p>
<p>一端的第二针与另一端的第三针是通路的，说明此线是交叉线。<br>以下是判断方法：</p>
<a id="more"></a>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2016/10/2108422507.jpg" alt=""></p>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2016/10/2023506305.jpg" alt=""></p>
<h3 id="2：串口直通线"><a href="#2：串口直通线" class="headerlink" title="2：串口直通线"></a>2：串口直通线</h3><p>如果用户串口设备与串口服务器连接使用公对母串口线，那必须使用公对母直通线。</p>
<p>一端公头的2对应，另一端母头的2，一端母头的3对应另一端公头的3.</p>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2016/10/3271306913.jpg" alt=""></p>
<h3 id="3：公母头定义："><a href="#3：公母头定义：" class="headerlink" title="3：公母头定义："></a>3：公母头定义：</h3><p>公头：</p>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2016/10/4086203997.png" alt=""></p>
<p>母头：</p>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2016/10/2966605950.jpg" alt=""></p>
<h3 id="4："><a href="#4：" class="headerlink" title="4："></a>4：</h3><p>使用WiFi网络串口服务器，或者DTU，我们配套的串口线都是标配的，如果我们的串口服务器的公头的，那我们配套的串口线应该是母对母的交叉线，如果客户的设备的公头，可以直接用我们配套的线，前提是客户的串口母头符合标准母头串口定义。如果客户买的我们的串口服务器是母头，那我们配套的串口线应该是公对母的直通线，如果客户的设备是公头，那使用我们的公对母的直通线应该是可以通信的。前提是客户的公头串口是标准的串口，符合公头串口引脚定义。</p>
<p>摘自：<a href="http://www.usr.cn/Faq/117.html" target="_blank" rel="external">http://www.usr.cn/Faq/117.html</a></p>
<p>对接方法</p>
<p>相信很多人都对单片机与计算机或者芯片通信时，RXD与TXD如何连接比较困惑。因为在一些电路图中，有的是直连接法，有的是交叉接法，让人有点摸不着头脑。</p>
<p>首先需要明白两个概念，就是DTE和DCE。DTE是指数据终端设备，典型的DTE就是计算机和单片机。DCE是指数据通信设备，典型的DCE就是MODEM。RS232串口标准中的RXD和TXD都是站在DTE立场上的，而不是DCE。明白了这一点，再讲下面的接线方法，就很好理解了。</p>
<p>单片机与计算机进行串口通信时，单片机的RXD接计算机的TXD，单片机的TXD接计算机的RXD。</p>
<blockquote>
<p>（1）使用串口直通线。设计电路时，单片机的RXD连接电路板DB9的TXD，单片机的TXD连接电路板DB9的RXD，具体实现可在232电平转换芯片处反接。</p>
<p>（2）使用串口交叉线。设计电路时，因为串口线已做交叉，单片机的RXD连接电路板DB9的RXD，单片机的TXD连接电路板DB9的TXD，均直连即可。</p>
</blockquote>
<p>这就可以解释为什么有的电路中使用直连接法，有的电路中使用交叉接法，就是因为使用的串口线不同。</p>
<p>单片机与串口设备（如GPRS模块、载波芯片等）通信时，一律将RXD与TXD反接，即单片机的RXD接设备的TXD，单片机的TXD接设备的RXD。</p>
<p>摘自： <a href="http://blog.csdn.net/sdwuyulunbi/article/details/6632382" target="_blank" rel="external">http://blog.csdn.net/sdwuyulunbi/article/details/6632382</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu 16.04下安装arm-linux-gcc]]></title>
      <url>http://rayuu.com/2016/11/30/linuxarmgcc/</url>
      <content type="html"><![CDATA[<p> ubuntu 16.04下安装arm-linux-gcc</p>
<p>最近在玩<code>micropython</code>，下载了<code>micropython</code>的源码后想进行编译玩一玩。</p>
<p><a href="https://github.com/micropython/micropython" target="_blank" rel="external">https://github.com/micropython/micropython</a></p>
<p>查看<code>readme.md</code>发现编译stm32的固件需要安装<code>arm-linux-gcc</code>等<code>gnu arm toolchain</code>交叉编译工具.</p>
<p>说干就干，还好电脑装了双系统，打开<code>ubuntu16.04</code>。</p>
<p>开始安装。</p>
<a id="more"></a>
<h3 id="1）、进入这个网站下载源码"><a href="#1）、进入这个网站下载源码" class="headerlink" title="1）、进入这个网站下载源码"></a>1）、进入这个网站下载源码</h3><p><a href="https://launchpad.net/gcc-arm-embedded" target="_blank" rel="external">https://launchpad.net/gcc-arm-embedded</a></p>
<p>右面有对应的版本下载，</p>
<p>下载完成后就是安装，查看readme.txt。</p>
<p>但是我的网速用浏览器下载太慢了。所以，我准备用apt-get 来安装。</p>
<p><a href="https://launchpadlibrarian.net/287100883/readme.txt" target="_blank" rel="external">https://launchpadlibrarian.net/287100883/readme.txt</a></p>
<h3 id="2）、apt-get-安装gcc-arm-embedded"><a href="#2）、apt-get-安装gcc-arm-embedded" class="headerlink" title="2）、apt-get 安装gcc-arm-embedded"></a>2）、apt-get 安装gcc-arm-embedded</h3><p>参考这篇文章 <a href="http://jingpin.jikexueyuan.com/article/56406.html" target="_blank" rel="external">http://jingpin.jikexueyuan.com/article/56406.html</a></p>
<pre><code>sudo add-apt-repository ppa:terry.guo/gcc-arm-embedded

sudo apt-get update

sudo apt-get install gcc-arm-none-eabi
</code></pre><p>这样就安装好了，工具链路径在/usr/bin/目录下，具体可以用 ls | grep arm查看；</p>
<p>然后搞个链接，像这样</p>
<pre><code>cd /usr/bin

sudo ln arm-none-eabi-gcc arm-linux-gcc

sudo ln arm-none-eabi-ar  arm-linux-ar

.....
</code></pre><p>最后就安装完成了这个编译工具。</p>
<h3 id="3）、开始编译micropython"><a href="#3）、开始编译micropython" class="headerlink" title="3）、开始编译micropython"></a>3）、开始编译micropython</h3><pre><code>git clone https://github.com/micropython/micropython.git

cd stmhal/

make
</code></pre><p>还以为要编译好久，结果一会儿就编译完了。</p>
<p>在<code>stmhal/build-PYBV10</code>目录下的<code>firmware.hex</code> 和<code>firmware.dfu</code>的就是编译出来的固件咯！</p>
<p>接下来继续研究源码！！！</p>
<p><img src="http://p1.bqimg.com/567571/aedc56efbecc1527.png" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[C++使用sqlite3进行简单的课表管理]]></title>
      <url>http://rayuu.com/2016/11/30/cppsqlite3sche/</url>
      <content type="html"><![CDATA[<p> C++使用sqlite3进行简单的课表管理</p>
<h2 id="一、生成sqlite3-lib"><a href="#一、生成sqlite3-lib" class="headerlink" title="一、生成sqlite3.lib"></a>一、生成sqlite3.lib</h2><p>1.在sqlite官网 <a href="http://www.sqlite.org/download.html" target="_blank" rel="external">http://www.sqlite.org/download.html</a> 上下载<code>sqlite-amalgamation-3071000.zip</code> 和<code>sqlite-dll-win32-x86-3071000.zip</code>。</p>
<p>2.分别解压上述两个文件到各自文件夹下（<code>sqlite3.def、sqlite3.dll</code>在同一文件夹<code>sqlite-dll</code>下）。</p>
<a id="more"></a>
<p>3.从VS2010的安装目录下<code>Microsoft Visual Studio 10.0\VC\bin</code>找到<code>lib.exe</code>和<code>link.exe</code>，从VS2010的安装目录下<code>\Microsoft Visual Studio 10.0\Common7\IDE</code>找到<code>mspdb100.dll</code>。将<code>lib.exe`` link.exe ``mspdb100.dll</code>放到步骤2中的<code>sqlite-dll</code>文件夹下。</p>
<p>4.打开cmd窗口，转到上述sqlite-dll文件夹下，在Windows右键添加cmd菜单可以快速到达，详见<a href="http://blog.rayuu.com/cmdhere.html" target="_blank" rel="external">http://blog.rayuu.com/cmdhere.html</a></p>
<p>5.输入命令：</p>
<pre><code>LIB /DEF:sqlite3.def /machine:ix86
</code></pre><p>这时，在sqlite-dll文件夹下会出现sqlite3.lib。</p>
<h2 id="二、VS2010静态编译生成exe文件"><a href="#二、VS2010静态编译生成exe文件" class="headerlink" title="二、VS2010静态编译生成exe文件"></a>二、VS2010静态编译生成exe文件</h2><p>VS2010静态编译生成的.exe可执行文件，可以免安装在其他电脑直接运行</p>
<p>静态编译：就是在编译可执行文件的时候，将可执行文件需要调用的对应动态链接库（.so）中的部分提取出来，链接到可执行文件中去，使可执行文件在运行的时候不依赖动态链接库。</p>
<p>编译方式：</p>
<blockquote>
<p>第1种：</p>
</blockquote>
<p>设置：</p>
<p>1、项目-&gt;配置属性-&gt;常规-&gt;MFC的使用：在静态库中使用MFC</p>
<p>2、项目 -&gt; 配置属性-&gt;C/C++-&gt;代码生成-&gt;运行库 :选择 多线程调试（/MTd）。</p>
<p>编译时，选择的是debug，win32</p>
<p>然后执行编译生成方案，在该工程目录下的debug文件中，找到该.exe文件，即可在其他电脑运行。</p>
<blockquote>
<p>第2种：</p>
</blockquote>
<p>一般可以配置一下两项：</p>
<p>1.项目 -&gt; 配置属性-&gt;常规-&gt;MFC的使用 :在静态库中使用MFC。</p>
<p>2.项目 -&gt; 配置属性-&gt;C/C++-&gt;代码生成-&gt;运行库 :选择 多线程调试（/MT）。</p>
<p>编译时，选择的是release，win32（这个选择项在工具栏的debug选框中，一般我们使用debug方式）</p>
<p>debug方式产生的文件会比较大，听说它包含了一些调试用的信息，release方式生成的只是该软件所需要的所有功能而已（这个我也不懂，反正大小差不多2:1）。</p>
<h2 id="三、课表程序编写"><a href="#三、课表程序编写" class="headerlink" title="三、课表程序编写"></a>三、课表程序编写</h2><pre><code>#include&lt;iostream&gt;
#include&lt;sstream&gt;
#include&quot;lib/sqlite3.h&quot;
#include&lt;string&gt;

using namespace std;
//定义课表结构
struct content
{
    string context;
};
/**********************************
        数据库操作
***********************************/
bool Connect();//连接数据库并创建表
bool Select(int day);//查询单条记录
bool Delete(int day);//删除单条记录
bool SelectAll();//查询全部
bool DeleteAll();//删除全部
bool Add(int day,const string&amp; no1,const string&amp; no2,const string&amp; no3,const string&amp; no4,const string&amp; no5);//添加单条记录
int AddDay(content *p);//添加某一天记录
bool exist_in_db(int pathstr);//判断要添加的数据是否存在
/**********************************
        其他操作
***********************************/
string IntToString (int a);//数字转字符
void Menu();//菜单
void show(content *m);//显示输入的课表内容
void Find();//查找
void DelDay();//删除某一天的数据
//SQLITE_OK 是零
sqlite3 *db=NULL;

// 回调sql
static int callback(void *NotUsed, int argc, char **argv, char **azColName){
   int i;
   for(i=0; i&lt;argc; i++){
      printf(&quot;%s = %s\n&quot;, azColName[i], argv[i] ? argv[i] : &quot;NULL&quot;);
   }
   printf(&quot;\n&quot;);
   return 0;
}

static int feedback(void *NotUsed, int argc, char **argv, char **azColName){
   int i;
   cout&lt;&lt;&quot;星期 &quot;&lt;&lt;argv[1]&lt;&lt;&quot; 的课表为：\n&quot;;
   for(i=2; i&lt;argc; i++){
      cout&lt;&lt;&quot;第 &quot;&lt;&lt;i-1&lt;&lt;&quot; 节课： &quot;;
      printf(&quot;%s\n&quot;, argv[i] ? argv[i] : &quot;NULL&quot;);
   }
   printf(&quot;\n&quot;);
   return 0;
}

int main()
{
    int SetDay;//星期
    int MenuChoice;//菜单选择
    char *errmsg = 0;
    content *p = new content[5];
    Connect();
    Menu();
    while(cin&gt;&gt;MenuChoice)
    {
        cin.sync();
        cin.clear();
        switch(MenuChoice)
        {
        case 1:{
                SetDay = AddDay(p);
                show(p);
                Add(SetDay,p[0].context,p[1].context,p[2].context,p[3].context,p[4].context);
               }break;
        case 2:{Find();}break;
        case 3:{DelDay();}break;
        case 0:{exit(0);}break;
        default :Menu();break;
        }
        cout &lt;&lt; &quot;按回车键返回主菜单......&quot;;
        cin.get();
        system(&quot;cls&quot;);
        Menu();
    }
    sqlite3_close(db);
    system(&quot;pause&quot;);
    return 0;
}

//connect &amp; create table
bool Connect()
{
    int con;
    con = sqlite3_open(&quot;schedule.db&quot;,&amp;db);
    if(con)
    {
        fprintf(stderr, &quot;Can&apos;t open database: %s\n&quot;,sqlite3_errmsg(db));
        exit(0);
    }
    else
    {
        fprintf(stdout,&quot;连接数据库成功\n&quot;);
    }
    char *sql;
    char * errmsg=0;
    // 新建表 schedule
    sql = &quot;CREATE TABLE IF NOT EXISTS schedule(&quot;\
        &quot;ID INTEGER PRIMARY KEY AUTOINCREMENT,&quot;\
        &quot;WEEKLY            INT     NOT NULL,&quot;\
        &quot;NO1            TEXT    NOT NULL,&quot;\
        &quot;NO2            TEXT    NOT NULL,&quot;\
        &quot;NO3            TEXT    NOT NULL,&quot;\
        &quot;NO4            TEXT    NOT NULL,&quot;\
        &quot;NO5            TEXT    NOT NULL&quot;\
        &quot;);&quot;;
    con = sqlite3_exec(db,sql,callback, 0, &amp;errmsg);
    if(con != SQLITE_OK)
    {
        cout &lt;&lt; &quot;add fail: &quot;&lt;&lt;errmsg&lt;&lt;endl;
        return false;
    }
    return true;
}

//添加
bool Add(int day,const string&amp; no1,const string&amp; no2,const string&amp; no3,const string&amp; no4,const string&amp; no5)
{
    char *errmsg=0;
    int res=1;
    int  week;
    week = day;
    string strsql = &quot;&quot;;
    strsql += &quot;insert into schedule(WEEKLY,NO1,NO2,NO3,NO4,NO5)&quot;;
    strsql += &quot; values(&quot;;
    strsql += &quot;&apos;&quot;;
    strsql += IntToString(day);
    strsql += &quot;&apos;,&apos;&quot;;
    strsql += no1;
    strsql += &quot;&apos;,&apos;&quot;;
    strsql += no2;
    strsql += &quot;&apos;,&apos;&quot;;
    strsql += no3;
    strsql += &quot;&apos;,&apos;&quot;;
    strsql += no4;
    strsql += &quot;&apos;,&apos;&quot;;
    strsql += no5;
    strsql += &quot;&apos;);&quot;;
    //启动一个事务处理
    //cout &lt;&lt;strsql&lt;&lt;endl;
    if(!exist_in_db(week))
    {
        res = sqlite3_exec(db,strsql.c_str(),0,0, &amp;errmsg);         
    }
    else
    {
        return false;
    }
    if(res != SQLITE_OK)
    {
        cout &lt;&lt; &quot;add fail: &quot;&lt;&lt;errmsg&lt;&lt;endl;
        return false;
    }
    else
    {
        cout &lt;&lt; &quot;add success&quot;&lt;&lt;endl;
    }
    return true;
}

//查找某一天的课表
bool Select(int day)
{
    stringstream strsql;
    char *errmsg = 0;
    //启动一个事务处理
    int res; 

    strsql &lt;&lt; &quot;SELECT * FROM schedule WHERE WEEKLY=&quot;;
    strsql &lt;&lt; day;
    string str = strsql.str();
    res=sqlite3_exec(db,str.c_str(),feedback, 0, &amp;errmsg);
    if(res!=SQLITE_OK)
    {
        cout &lt;&lt; &quot;查找失败&quot;&lt;&lt;endl;
        return false;
    }
    return true;
}

// 查找全部
bool SelectAll()
{
    stringstream strsql;
    char *errmsg = 0;
    //启动一个事务处理
    int res;  
    strsql &lt;&lt; &quot;SELECT * FROM schedule&quot;;
    string str = strsql.str();
    res=sqlite3_exec(db,str.c_str(),feedback, 0, &amp;errmsg);
    if(res!=SQLITE_OK)
    {
        cout &lt;&lt; &quot;查找失败&quot;&lt;&lt;endl;
        return false;
    }
    return true;
}

// 删除
bool Delete(int day)
{
    stringstream strsql;
    char *errmsg = 0;
    //启动一个事务处理
    int res; 
    strsql &lt;&lt; &quot;DELETE FROM schedule WHERE WEEKLY=&quot;;
    strsql &lt;&lt; day;
    string str = strsql.str();
    res=sqlite3_exec(db,str.c_str(),feedback, 0, &amp;errmsg);
    if(res!=SQLITE_OK)
    {
        cout &lt;&lt; &quot;删除失败&quot;&lt;&lt;endl;
        return false;
    }
    return true;
}

// 删除全部
bool DeleteAll()
{
    stringstream strsql;
    char *errmsg = 0;
    //启动一个事务处理
    int res;  
    strsql &lt;&lt; &quot;DELETE FROM schedule&quot;;
    string str = strsql.str();
    res=sqlite3_exec(db,str.c_str(),feedback, 0, &amp;errmsg);
    if(res!=SQLITE_OK)
    {
        cout &lt;&lt; &quot;删除全部失败&quot;&lt;&lt;endl;
        return false;
    }
    return true;
}

//判断星期是否存在
bool exist_in_db(int pathstr)
{
    char sql_query[128]={0};
    sprintf(sql_query,&quot;select count(*) from schedule where WEEKLY=&apos;%d&apos;&quot;,pathstr);
//    sprintf(sql_query,&quot;select count(*) from schedule where ID=&apos;%d&apos;&quot;,day);
    //cout &lt;&lt; sql_query&lt;&lt;endl;
    sqlite3_stmt *pstmt;
    sqlite3_prepare(db, sql_query, strlen(sql_query), &amp;pstmt, NULL);
    sqlite3_step(pstmt);
    int count=sqlite3_column_int(pstmt,0);
    sqlite3_finalize(pstmt);
    //cout &lt;&lt; count&lt;&lt;endl;
    if(count &gt; 0)
    {
        cout&lt;&lt;&quot;星期 &quot;&lt;&lt;pathstr&lt;&lt;&quot; 的课表已添加，\n请删除后重新添加.&quot;&lt;&lt;endl;
        return true;
    }
    return false;
}

// 输入课表
int AddDay(content *p)
{
    int day;
    cout &lt;&lt;&quot;请输入星期数： &quot;&lt;&lt;endl;
    cin &gt;&gt; day;
    cin.get();
    int i=0;
    for(i=0;i&lt;5;i++)
    {
        cin.clear();
        cin.sync();
        cout &lt;&lt; &quot;第 &quot;&lt;&lt;i+1&lt;&lt;&quot; 节课&quot;&lt;&lt;endl;
        getline(cin,p[i].context);
    }
    return day;

}

// 删除
void DelDay()
{
    int day;
    cout &lt;&lt;&quot;Please enter the day(1~7)&quot;&lt;&lt;endl;
    cin&gt;&gt;day;
    //while(cin&gt;&gt;day)
    {
        cin.sync();
        cin.clear();
        switch(day)
        {
        case 1:Delete(day);break;
        case 2:Delete(day);break;
        case 3:Delete(day);break;
        case 4:Delete(day);break;
        case 5:Delete(day);break;
        case 6:Delete(day);break;
        case 7:Delete(day);break;
        default:DeleteAll();break;
        }
    }
    if(!cin)
    {
        cout &lt;&lt; &quot;请输入数字......&quot;&lt;&lt;endl;
    }

}

// 显示输入的内容
void show(content *m)
{
    cout &lt;&lt;&quot;你输入的内容是：&quot;&lt;&lt;endl;
    int i=0;
    for(i=0;i&lt;5;i++)
    {
        cout &lt;&lt; &quot;第 &quot;&lt;&lt;i+1&lt;&lt;&quot; 节课 &quot;&lt;&lt; m[i].context &lt;&lt; endl;
    }
    cout &lt;&lt; endl;
}

// 菜单
void Menu()
{
    cout&lt;&lt;&quot;+++++++++++++++++++++++++++++++++++++++++\n&quot;;
    cout&lt;&lt;&quot;+               课    表                +\n&quot;;
    cout&lt;&lt;&quot;+                V1.0                   +\n&quot;;
    cout&lt;&lt;&quot;+               by:Rayu                 +\n&quot;;
    cout&lt;&lt;&quot;+             2016.10.18                +\n&quot;;
    cout&lt;&lt;&quot;+++++++++++++++++++++++++++++++++++++++++\n&quot;;
    cout&lt;&lt;&quot;\n&quot;;
    cout&lt;&lt;&quot;【1】添加课表\t&quot;;
    cout&lt;&lt;&quot;【2】查询课表\n&quot;;
    cout&lt;&lt;&quot;【3】删除课表\t&quot;;
    cout&lt;&lt;&quot;【0】退出系统\n&quot;;
    cout&lt;&lt;&quot;输入对应的数字进入菜单： \n&quot;;
}

void Find()
{
    int day;
    cout &lt;&lt;&quot;Please enter the day(1~7)&quot;&lt;&lt;endl;
    cin&gt;&gt;day;
    //while(cin&gt;&gt;day)
    {
        cin.sync();
        cin.clear();
        switch(day)
        {
        case 1:Select(day);break;
        case 2:Select(day);break;
        case 3:Select(day);break;
        case 4:Select(day);break;
        case 5:Select(day);break;
        case 6:Select(day);break;
        case 7:Select(day);break;
        default:SelectAll();break;
        }
    }
    if(!cin)
    {
        cout &lt;&lt; &quot;请输入数字......&quot;&lt;&lt;endl;
    }
}

// int to string
string IntToString (int a)
{
    ostringstream temp;
    temp&lt;&lt;a;
    return temp.str();
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[pyinstaller和py2exe生成exe文件并添加版本信息和自定义图标]]></title>
      <url>http://rayuu.com/2016/09/29/pyinstaller-py2exe-exe/</url>
      <content type="html"><![CDATA[<h1 id="pyinstaller和py2exe把Python脚本生成exe文件，"><a href="#pyinstaller和py2exe把Python脚本生成exe文件，" class="headerlink" title="pyinstaller和py2exe把Python脚本生成exe文件，"></a>pyinstaller和py2exe把Python脚本生成exe文件，</h1><h1 id="并添加版本信息和自定义图标。"><a href="#并添加版本信息和自定义图标。" class="headerlink" title="并添加版本信息和自定义图标。"></a>并添加版本信息和自定义图标。</h1><p>写了一个查找产品通道号的小程序，目前还没进行异常处理。<br>以下是程序源码。</p>
<p>另外一个地址<br><a href="http://blog.rayuu.com/pyinstaller_py2exe_exe.html" title="http://blog.rayuu.com/pyinstaller_py2exe_exe.html" target="_blank" rel="external">http://blog.rayuu.com/pyinstaller_py2exe_exe.html</a></p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># -*- coding:UTF-8 -*-</span><br><span class="line">import serial</span><br><span class="line">import time</span><br><span class="line"># import argparse</span><br><span class="line">import serial.tools.list_ports</span><br><span class="line">from time import sleep</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># 串口</span><br><span class="line">class Serial(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        print u&quot;+++++++++++++++++++++++++++++++++++++++++&quot;</span><br><span class="line">        print u&quot;+            通道号查找程序             +&quot;</span><br><span class="line">        print u&quot;+                V1.0                   +&quot;</span><br><span class="line">        print u&quot;+               by:Rayu                 +&quot;</span><br><span class="line">        print u&quot;+             2016.09.27                +&quot;</span><br><span class="line">        print u&quot;+++++++++++++++++++++++++++++++++++++++++&quot;</span><br><span class="line"> </span><br><span class="line">    # 查找串口</span><br><span class="line">    def serial_find(self):</span><br><span class="line">        plist = list(serial.tools.list_ports.comports())</span><br><span class="line">        if len(plist) &lt;= 0:</span><br><span class="line">            print u&quot;串口未发现！&quot;</span><br><span class="line">        else:</span><br><span class="line">            print u&quot;找到的串口如下:&quot;</span><br><span class="line">            for i in range(0, len(plist)):</span><br><span class="line">                print [i+1], plist[i]</span><br><span class="line">        print u&quot;请输入对应的数字选择你想要使用的串口：&lt;默认为1&gt;&quot;</span><br><span class="line">        number = raw_input()</span><br><span class="line">        if not number:</span><br><span class="line">            number = 1</span><br><span class="line">        number = int(number)</span><br><span class="line">        while number &gt; len(plist):</span><br><span class="line">            print u&quot;串口未找到，请重新输入。&quot;</span><br><span class="line">            print u&quot;请输入对应的数字选择你想要使用的串口：&quot;</span><br><span class="line">            number = raw_input()</span><br><span class="line">            number = int(number)</span><br><span class="line">        if number &lt;= len(plist):</span><br><span class="line">            uart_choose = plist[number-1][0]</span><br><span class="line">        return uart_choose</span><br><span class="line"> </span><br><span class="line">    # 串口波特率</span><br><span class="line">    def serial_baudrate(self):</span><br><span class="line">        print u&quot;请输入串口波特率：&lt;默认115200&gt;&quot;</span><br><span class="line">        baudrate = raw_input()</span><br><span class="line">        if not baudrate:</span><br><span class="line">            baudrate = 115200</span><br><span class="line">        baudrate = int(baudrate)</span><br><span class="line">        return baudrate</span><br><span class="line"> </span><br><span class="line">    # 获取设备地址</span><br><span class="line">    def input_dev_addr(self):</span><br><span class="line">        print u&apos;请输入设备地址：&lt;如：dc00000233&gt;&apos;</span><br><span class="line">        data_dev = raw_input()</span><br><span class="line">        # print data_dev, type(data_dev)</span><br><span class="line">        return data_dev</span><br><span class="line"> </span><br><span class="line">    # 打开串口</span><br><span class="line">    def serial_open(self, com, baud):</span><br><span class="line">        try:</span><br><span class="line">            ser = serial.Serial(com, baud, timeout=0.1)</span><br><span class="line">        except Exception, e:</span><br><span class="line">            print u&quot;打开串口失败，请检查串口是否被占用。\n5秒后自动退出程序&quot;</span><br><span class="line">            time.sleep(5)</span><br><span class="line">            exit(1)</span><br><span class="line">        print u&quot;串口&quot;, com, u&quot;打开成功......波特率为：&quot;, baud</span><br><span class="line">        sleep(0.5)</span><br><span class="line">        return ser</span><br><span class="line"> </span><br><span class="line">    # 更改通道号</span><br><span class="line">    def serial_send_channel(self, com, baud, dev, sta):</span><br><span class="line">        # </span><br><span class="line">        data_comm = &quot;AB&quot;</span><br><span class="line">        data_sum = &quot;01&quot;</span><br><span class="line">        # 通道号修改</span><br><span class="line">        ser = self.serial_open(com, baud)</span><br><span class="line">        start = time.clock()</span><br><span class="line">        for data_channel in range(0, 256):</span><br><span class="line">            # 转换为十六进制字符串</span><br><span class="line">            dev_channel = hex(data_channel)</span><br><span class="line">            # 把0x删掉</span><br><span class="line">            dev_channel = dev_channel[2:4]</span><br><span class="line">            if len(dev_channel) == 1:</span><br><span class="line">                dev_channel = &apos;0&apos; + dev_channel</span><br><span class="line">            # 连接字符串</span><br><span class="line">            content_addr = data_comm+dev_channel+data_sum</span><br><span class="line">            # print content_addr,&quot;content_addr&quot;,type(content_addr)</span><br><span class="line">            # 十六进制发送</span><br><span class="line">            content_addr = content_addr.decode(&quot;hex&quot;)</span><br><span class="line">            # print content_addr</span><br><span class="line">            # print u&quot;开始发送数据...&quot;</span><br><span class="line">            ser.write(content_addr)</span><br><span class="line"> </span><br><span class="line">            lowerpower = int(sta)</span><br><span class="line">            # sta = self.serial_send_order(ser,DEV)</span><br><span class="line">            re_str = []</span><br><span class="line">            cou = 0</span><br><span class="line">            find_time = data_channel + 1</span><br><span class="line">            print u&quot;进行第 %s&quot; % find_time, u&quot;次查找.....&quot;</span><br><span class="line">            i = 1</span><br><span class="line">            while i &lt;= 10:</span><br><span class="line">                i += 1</span><br><span class="line">                for c in ser.read():</span><br><span class="line">                    # re_str += c</span><br><span class="line">                    re_str.append(c)</span><br><span class="line">                    cou += 1</span><br><span class="line">                    if cou == 10:</span><br><span class="line">                        # print re_str,&quot;re_str&quot;</span><br><span class="line">                        re_str = []</span><br><span class="line">                        break</span><br><span class="line"> </span><br><span class="line">            content_order = self.serial_send_order(dev)</span><br><span class="line">            if lowerpower == 1:</span><br><span class="line">                print u&quot;低功耗设备，6秒发一次&quot;</span><br><span class="line">                ser.write(content_order)</span><br><span class="line">                time.sleep(6)</span><br><span class="line">            else:</span><br><span class="line">                # time.sleep(0)</span><br><span class="line">                ser.write(content_order)</span><br><span class="line"> </span><br><span class="line">            line = []</span><br><span class="line">            cnt = 0</span><br><span class="line">            j = 1</span><br><span class="line">            while j &lt;= 10:</span><br><span class="line">                j += 1</span><br><span class="line">                for d in ser.read():</span><br><span class="line">                    line.append(d)</span><br><span class="line">                    cnt += 1</span><br><span class="line">                    if cnt == 10:</span><br><span class="line">                        # print &quot;line&quot;,line</span><br><span class="line">                        # line = []</span><br><span class="line">                        # print data_channel</span><br><span class="line">                        print u&quot;查找结束......&quot;</span><br><span class="line">                        end = time.clock()</span><br><span class="line">                        print u&quot;用时: %f s&quot; % (end-start)</span><br><span class="line">                        line[8] = ord(line[8])</span><br><span class="line">                        # print ord(line[8])</span><br><span class="line">                        ser.close()</span><br><span class="line">                        return line[8]</span><br><span class="line">        end = time.clock()</span><br><span class="line">        print u&quot;用时: %f s&quot; % (end - start)</span><br><span class="line">        print u&quot;未找到通道号，请确定设备地址和工装是否正常......&quot;</span><br><span class="line">        ser.close()</span><br><span class="line">        return -1</span><br><span class="line"> </span><br><span class="line">    # 发送通信命令</span><br><span class="line">    def serial_send_order(self, dev):</span><br><span class="line">        # 发送通信测试命令</span><br><span class="line">        data_head = &quot;F01&quot;</span><br><span class="line">        data_dev = dev</span><br><span class="line">        data_tail = &quot;E3&quot;</span><br><span class="line">        # print data_dev</span><br><span class="line">        data_addr = data_head + data_dev + data_tail</span><br><span class="line">        # data_addr = &quot;F0&quot;</span><br><span class="line">        data_addr = data_addr.decode(&quot;hex&quot;)</span><br><span class="line">        return data_addr</span><br><span class="line"> </span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    comm = Serial()</span><br><span class="line">    # 获取COM口</span><br><span class="line">    COMM = comm.serial_find()</span><br><span class="line">    # print COMM</span><br><span class="line">    BAUD = comm.serial_baudrate()</span><br><span class="line">    while True:</span><br><span class="line">        DEV = comm.input_dev_addr()</span><br><span class="line">        if DEV == &apos;q&apos;:</span><br><span class="line">            exit()</span><br><span class="line">        print u&quot;低功耗设备请输入1,否则请直接按回车......\n输入q结束程序......&quot;</span><br><span class="line">        sta = raw_input()</span><br><span class="line">        if not sta:</span><br><span class="line">            sta = 0</span><br><span class="line">        channel = comm.serial_send_channel(COMM, BAUD, DEV, sta)</span><br><span class="line">        if channel == -1:</span><br><span class="line">            print u&quot;查找失败......请重新尝试......&quot;</span><br><span class="line">        else:</span><br><span class="line">            channel = hex(channel)</span><br><span class="line">            print u&quot;通道号为: &quot;, channel</span><br><span class="line"> </span><br><span class="line">        # comm.serial_send_order(DEV)</span><br><span class="line">        # print BAUD</span><br><span class="line">        # comm.serial_open(COMM, BAUD)</span><br><span class="line">        # parser = argparse.ArgumentParser(description=&quot;通道号查找程序&quot;)</span><br><span class="line">        # parser.add_argument(&apos;--port&apos;, action=&apos;store&apos;, dest=&apos;port&apos;, type=int, required=True)</span><br><span class="line">        # given_args = parser.parse_args()</span><br><span class="line">        # port = given_args.port</span><br></pre></td></tr></table></figure>
<h2 id="程序编写完成后，生成exe可执行文件。"><a href="#程序编写完成后，生成exe可执行文件。" class="headerlink" title="程序编写完成后，生成exe可执行文件。"></a>程序编写完成后，生成exe可执行文件。</h2><h3 id="首先利用py2exe进行转换。"><a href="#首先利用py2exe进行转换。" class="headerlink" title="首先利用py2exe进行转换。"></a>首先利用py2exe进行转换。</h3><blockquote>
<p>1).新建setup.py</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">__author__ = &apos;Rayu&apos;</span><br><span class="line">from distutils.core import setup</span><br><span class="line">import py2exe</span><br><span class="line">includes = [&quot;encodings&quot;, &quot;encodings.*&quot;]</span><br><span class="line">options = &#123;&quot;py2exe&quot;: &#123;&quot;compressed&quot;: 1, &quot;optimize&quot;: 2, &quot;includes&quot;: includes, &quot;bundle_files&quot;: 1&#125;&#125;</span><br><span class="line">setup(</span><br><span class="line">version = &quot;0.1.0&quot;,</span><br><span class="line">description = u&quot;[利用工装查找设备通道号]&quot;,</span><br><span class="line">name = &quot;FindChannel&quot;,</span><br><span class="line">options = options,</span><br><span class="line">zipfile = None,</span><br><span class="line"># 生成有指定图标的exe</span><br><span class="line">console = [&#123;&quot;script&quot;: &quot;main.py&quot;,</span><br><span class="line">            &quot;icon_resources&quot;: [(1, u&quot;833.ico&quot;)]</span><br><span class="line">           &#125;]</span><br><span class="line"># 生成无图标exe</span><br><span class="line"># windows = [&#123;&quot;script&quot;: &quot;[源码文件名].py&quot;&#125;]</span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line"># from distutils.core import setup</span><br><span class="line"># import py2exe</span><br><span class="line">#</span><br><span class="line"># setup(console=[&apos;main.py&apos;])</span><br></pre></td></tr></table></figure>
<p>然后运行程序  <code>python setup.py py2exe</code></p>
<p>在64位系统下运行会报错： <code>bundle_files:1</code> 在64位操作系统下无效。 这句话的意思就是生成单文件程序。</p>
<p>所以64位操作系统下想生成单文件程序的可以改用<code>pyinstaller</code>.</p>
<blockquote>
<p>2).利用<code>pip install PyInstaller</code>  或者去官网下载安装包。</p>
</blockquote>
<p>我安装的<code>PyInstaller3.2</code>版本。</p>
<p>安装完成后，在命令窗口下执行：</p>
<pre><code>pyinstaller main.py
</code></pre><p>会在当前文件夹的<code>dist</code>目录下生成<code>main</code>文件夹，里面的<code>main.exe</code>就是生成的可执行文件。</p>
<p>把<code>main</code>文件夹整个复制出来就可以在其他地方运行了。</p>
<p>如果想为程序添加自定义图标和版本信息，那么在<code>main.py</code>的目录下，会有一个<code>main.spec</code>文件，使用<code>notepad++</code>打开进行编辑。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># -*- mode: python -*-</span><br><span class="line"> </span><br><span class="line">block_cipher = None</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">a = Analysis([&apos;main.py&apos;],</span><br><span class="line">             pathex=[&apos;C:\\Users\\jx007\\Desktop\\commserial&apos;],</span><br><span class="line">             binaries=None,</span><br><span class="line">             datas=None,</span><br><span class="line">             hiddenimports=[],</span><br><span class="line">             hookspath=[],</span><br><span class="line">             runtime_hooks=[],</span><br><span class="line">             excludes=[],</span><br><span class="line">             win_no_prefer_redirects=False,</span><br><span class="line">             win_private_assemblies=False,</span><br><span class="line">             cipher=block_cipher)</span><br><span class="line">pyz = PYZ(a.pure, a.zipped_data,</span><br><span class="line">             cipher=block_cipher)</span><br><span class="line">exe = EXE(pyz,</span><br><span class="line">          a.scripts,</span><br><span class="line">          a.binaries,</span><br><span class="line">          a.zipfiles,</span><br><span class="line">          a.datas,</span><br><span class="line">          name=&apos;FindChannel&apos;,</span><br><span class="line">          version=&apos;version.txt&apos;,</span><br><span class="line">          debug=False,</span><br><span class="line">          strip=False,</span><br><span class="line">          upx=True,</span><br><span class="line">          console=True , icon=&apos;833.ico&apos;)</span><br></pre></td></tr></table></figure>
<p>在<code>a.datas</code>, 下面添加</p>
<pre><code>version=&apos;version.txt&apos;,
icon=&apos;833.ico&apos;,
</code></pre><p>然后保存。</p>
<p>先不要执行，然后把你心仪的<code>ico</code>图标放到和<code>main.py</code>同一目录下，<code>version</code>是版本信息路径。</p>
<p>名称为<code>version.txt</code></p>
<p>这时候我们需要编写<code>version.txt</code></p>
<p>下面是一个例子：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># UTF-8</span><br><span class="line">#</span><br><span class="line">VSVersionInfo(</span><br><span class="line">  ffi=FixedFileInfo(</span><br><span class="line">    # filevers and prodvers should be always a tuple with four items: (1, 2, 3, 4)</span><br><span class="line">    # Set not needed items to zero 0.</span><br><span class="line">    filevers=(6, 1, 7600, 16385),</span><br><span class="line">    prodvers=(6, 1, 7600, 16385),</span><br><span class="line">    # Contains a bitmask that specifies the valid bits &apos;flags&apos;r</span><br><span class="line">    mask=0x3f,</span><br><span class="line">    # Contains a bitmask that specifies the Boolean attributes of the file.</span><br><span class="line">    flags=0x0,</span><br><span class="line">    # The operating system for which this file was designed.</span><br><span class="line">    # 0x4 - NT and there is no need to change it.</span><br><span class="line">    OS=0x40004,</span><br><span class="line">    # The general type of file.</span><br><span class="line">    # 0x1 - the file is an application.</span><br><span class="line">    fileType=0x1,</span><br><span class="line">    # The function of the file.</span><br><span class="line">    # 0x0 - the function is not defined for this fileType</span><br><span class="line">    subtype=0x0,</span><br><span class="line">    # Creation date and time stamp.</span><br><span class="line">    date=(0, 0)</span><br><span class="line">    ),</span><br><span class="line">  kids=[</span><br><span class="line">    StringFileInfo(</span><br><span class="line">      [</span><br><span class="line">      StringTable(</span><br><span class="line">        u&apos;040904B0&apos;,</span><br><span class="line">        [StringStruct(u&apos;CompanyName&apos;, u&apos;Microsoft Corporation&apos;),</span><br><span class="line">        StringStruct(u&apos;FileDescription&apos;, u&apos;Windows Command Processor&apos;),</span><br><span class="line">        StringStruct(u&apos;FileVersion&apos;, u&apos;6.1.7600.16385 (win7_rtm.090713-1255)&apos;),</span><br><span class="line">        StringStruct(u&apos;InternalName&apos;, u&apos;cmd&apos;),</span><br><span class="line">        StringStruct(u&apos;LegalCopyright&apos;, u&apos;© Microsoft Corporation. All rights reserved.&apos;),</span><br><span class="line">        StringStruct(u&apos;OriginalFilename&apos;, u&apos;Cmd.Exe&apos;),</span><br><span class="line">        StringStruct(u&apos;ProductName&apos;, u&apos;Microsoft® Windows® Operating System&apos;),</span><br><span class="line">        StringStruct(u&apos;ProductVersion&apos;, u&apos;6.1.7600.16385&apos;)])</span><br><span class="line">      ]), </span><br><span class="line">    VarFileInfo([VarStruct(u&apos;Translation&apos;, [1033, 1200])])</span><br><span class="line">  ]</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>如果你想要自己找这个文件的话，可以参考<code>pyinstaller3</code>的文档，里面写的很详细。</p>
<p>下面简单介绍一下如何获取这个文件。</p>
<p>首先在文档里面写到了，利用 <code>pyi-grab_version executable_with_version_resource</code> 这个命令来获取命令的版本信息。</p>
<p>我们运行 <code>pyi-grab_version c:/windows/system32/cmd.exe</code></p>
<p>然后会把一个<code>file_version_info.txt</code>记事本文件保存在你cmd命令运行时候的路径下面。<br>找到并打开它，就是上面所列出的内容了。<br>然后根据自己的需要进行修改就可以了。<br>最后在<code>main.py</code>的路径下执行</p>
<pre><code>pyinstaller main.spec
</code></pre><p>在<code>dist</code>文件夹下就产生了一个<code>exe</code>文件，图标也是我们想要的那个图标了，至于程序的详细信息可以通过右键查看详细信息进行查看了。</p>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2016/09/1746137199.jpg" alt="详细信息"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[瑞萨单片机系统低功耗的设计]]></title>
      <url>http://rayuu.com/2016/08/13/MicrocontrollersLowPower/</url>
      <content type="html"><![CDATA[<p>经过一周多的单片机设计，功能基本完成。但是发现运行功耗非常大，电流在5mA左右，无线发射和接收时更是高达15mA。</p>
<p>这和要求的功耗设计都不在一个数量级，要求的功耗是在微安级别的。所以需要一个方法降低系统的功耗。</p>
<a id="more"></a>
<p>单片机系统的功耗是由MCU和其他外围电路的功耗共同决定。所以首先要对单片机系统的工作特点非常熟悉。<br>查阅手册发现，现在用的瑞萨单片机，有STOP,HALT,SNOOZE三种模式可以降低功耗。</p>
<p>以下是用户手册的说明</p>
<blockquote>
<p>(1) HALT 模式</p>
</blockquote>
<p>通过执行 HALT 指令进入 HALT 模式。 HALT 模式是停止 CPU 运行时钟的模式。在设定 HALT 模式前，如果高速系统时钟振荡电路、高速内部振荡器或者副系统时钟振荡电路正在振荡，各时钟就继续振荡。虽然此模式无法让工作电流降到 STOP 模式的程度，但是在想要通过中断请求立即重新开始处理或者想要频繁地进行间歇运行时是一种有效的模式。</p>
<blockquote>
<p>(2) STOP 模式</p>
</blockquote>
<p>通过执行 STOP 指令进入 STOP 模式。 STOP 模式是停止高速系统时钟振荡电路和高速内部振荡器的振荡并且停止整个系统的模式。能大幅度地降低 CPU 的工作电流。<br>因为 STOP 模式能通过中断请求来解除，所以也能进行间歇运行。但是，在 X1 时钟的情况下，因为在解除STOP 模式时需要确保振荡稳定的等待时间，所以如果一定要通过中断请求立即开始处理，就必须选择 HALT 模式。</p>
<blockquote>
<p>(3) SNOOZE 模式</p>
</blockquote>
<p>通过 CSIp 或者 UARTq 的数据接收以及由定时器触发信号 （中断请求信号 （ INTRTC/INTIT））产生的 A/D转换请求，解除 STOP 模式，不需要 CPU 运行而进行 CSIp 或者 UARTq 的数据接收，或者进行 A/D 转换。只有在选择高速内部振荡器作为 CPU/ 外围硬件时钟 （ fCLK）时才能设定 SNOOZE 模式。</p>
<p>在任何一种模式中，寄存器、标志和数据存储器全部保持设定为待机模式前的内容，并且还保持输入 / 输出端口的输出锁存器和输出缓冲器的状态。</p>
<p>最后决定使用STOP模式来进行功耗设计，使功耗尽可能降低到最低。</p>
<p>以单片机为核心构成的系统，其系统的总能耗是由单片机能耗及其外围电路能耗共同构成。</p>
<p>所以为了降低整个系统的功耗，除了要降低单片机自身的运行恭号外，还要降低外围电路的功耗。</p>
<p>如果要在STOP模式下工作，首先要把单片机外围的IO设备最大程度上禁用。</p>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2016/08/2578120507.png" alt="&quot;STOP模式中的运行状态&quot;"></p>
<blockquote>
<p>在本系统中，除了单片机，还有无线模块，蜂鸣器和一个LED灯耗电。</p>
</blockquote>
<p>下面进行分步描述</p>
<h3 id="1、首先要做的是对无线模块休眠，因为射频在工作的时候，电流高达15mA左右。"><a href="#1、首先要做的是对无线模块休眠，因为射频在工作的时候，电流高达15mA左右。" class="headerlink" title="1、首先要做的是对无线模块休眠，因为射频在工作的时候，电流高达15mA左右。"></a>1、首先要做的是对无线模块休眠，因为射频在工作的时候，电流高达15mA左右。</h3><p>Si24R1芯片内部有状态机，控制着芯片在不同工作模式的切换。<br>Si24R1可配置为Shutdown,Standby,Idle-TX,TX,Rx五种工作模式。</p>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2016/08/4010025032.png" alt="无线工作模式"></p>
<p>为了降低无线模块的功耗，也要让无线模块在Shutdown模式下工作。</p>
<p>在Shutdown工作模式下，Si24R1所有收发功能模块关闭，芯片停止工作，消耗电流最小，<br>但所有内部寄存器值和FIFO值保持不变，仍可通过SPI实现对寄存器的读写。</p>
<p>设置CONFIG寄存器的PWR_UP位的值为0，芯片立即返回到Shutdown工作模式。</p>
<p>查看CONFIG寄存器的配置如下：</p>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2016/08/3292061551.png" alt="CONFIG寄存器"></p>
<p>PWR_UP在CONFIG寄存器的第一位，所以把该位拉低即可。</p>
<p>编写子函数如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/******************************************************************</span><br><span class="line"></span><br><span class="line">SPI Shutdown 关断模式</span><br><span class="line"></span><br><span class="line">把config 配置寄存器的第一位PWR_up拉低</span><br><span class="line"></span><br><span class="line">********************************************************************/</span><br><span class="line"></span><br><span class="line">void SI24R1_Shutdown(void )</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">               </span><br><span class="line"> 				SI24R1_CEL;</span><br><span class="line"></span><br><span class="line">                SPI_Write_Reg(NRF_WRITE_REG + CONFIG, 0x00);</span><br><span class="line"></span><br><span class="line">                SI24R1_Delay_ms(2);</span><br><span class="line"></span><br><span class="line">                SI24R1_CEH;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后在必要的时候需要对无线模块进行唤醒。所以编写无线开启子函数。</p>
<pre><code>/******************************************************************
SPI 上电模式        
********************************************************************/
void SI24R1_PowerOn(void )
{
                SI24R1_CEL;
                SPI_Write_Reg(NRF_WRITE_REG + CONFIG, 0x71);//发射模式
                SI24R1_Delay_us(120);
                SPI_Write_Reg(NRF_WRITE_REG + CONFIG, 0x3F);  // Set PWR_UP bit, enable CRC(2 bytes)
                SI24R1_Delay_ms(2);
                SI24R1_CEH;

                RX_Mode(WireComm.Addr,WireComm.CommChannel);

}
</code></pre><p>至此无线低功耗设计完成。</p>
<h3 id="2、单片机I-O的处理"><a href="#2、单片机I-O的处理" class="headerlink" title="2、单片机I/O的处理"></a>2、单片机I/O的处理</h3><p>该系统对单片机I/O的利用有A/D转换，蜂鸣器，LED灯，EEPROM等。所以在进入STOP模式时，要把这些引脚给拉高。</p>
<p>蜂鸣器的话要根据硬件情况拉低或拉高。</p>
<h3 id="3、编写STOP模式函数"><a href="#3、编写STOP模式函数" class="headerlink" title="3、编写STOP模式函数"></a>3、编写STOP模式函数</h3><p>进入STOP模式很简单，一条STOP();就可以进入，所以在进入STOP模式之前要把单片机系统外围的I/O进行处理。没有用到的I/O最好也要设为输出拉高。</p>
<p>但是没有用到I/O对电流影响不大。</p>
<p>对于唤醒stop模式，打开单片机的内部定时器，周期为200ms。根据用户手册进行时序设计。它可以用来唤醒STOP模式。</p>
<p>内部定时器是一个12位间隔定时器。我们按事先设定的任意时间间隔产生中断 （ INTIT），能用于从 STOP 模式的唤醒以及 A/D 转换器的 SNOOZE模式的触发。</p>
<p>在定时器里面设定无线为休眠状态，主函数里面调用STOP模式。</p>
<p>无线的状态为每5s唤醒一次，工作50ms，然后重新进入休眠。</p>
<p>定时器中断和STOP模式部分程序如下：</p>
<pre><code>/***********************************************************************************************************************
* Function Name: r_it_interrupt
* Description  : This function is INTIT interrupt service routine.
* Arguments    : None
* Return Value : None
***********************************************************************************************************************/
__interrupt static void r_it_interrupt( void)
{
    /* Start user code. Do not edit comment generated here */
                 if(Envent.Si24R1Sleep&lt; 0xF0) Envent.Si24R1Sleep++;
                 if(Envent.DoorSleep&lt; 0xF0) Envent.DoorSleep++;
                 //按键扫描
                KeyScan();
               ....................................
    /* End user code. Do not edit comment generated here */
}
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/**********************************************************************************</span><br><span class="line">Function Name :   Stop_mode(void)</span><br><span class="line">Description             : 睡眠模式</span><br><span class="line">Parameters               : none</span><br><span class="line">Return value  : none</span><br><span class="line">***********************************************************************************/</span><br><span class="line">void Stop_mode(void )</span><br><span class="line">&#123;</span><br><span class="line">                 if((Envent.Si24R1Work&gt; 0) || (WIRREC !=WireComm.WorkSta) ) return ;</span><br><span class="line">                </span><br><span class="line">                SI24R1_Shutdown();</span><br><span class="line">                R_ADC_Set_OperationOff();</span><br><span class="line">                                </span><br><span class="line">                P6.0 =1;</span><br><span class="line">                P6.1 =1;</span><br><span class="line">                BELLOFF;</span><br><span class="line">                P2.2 =1;</span><br><span class="line">                P7.0 =1;</span><br><span class="line">                Envent.Si24R1Sleep =1;</span><br><span class="line">                 while(Envent.Si24R1Sleep)</span><br><span class="line">                &#123;</span><br><span class="line">                                 STOP();</span><br><span class="line">                                 NOP();</span><br><span class="line">                                 NOP();</span><br><span class="line">                                 NOP();</span><br><span class="line">                                 NOP();</span><br><span class="line">                    ....................</span><br><span class="line">                                   ...............</span><br><span class="line">                                 if(Envent.DoorSleep&gt;= 5)</span><br><span class="line">                                &#123;</span><br><span class="line">                                                Envent.DoorSleep =0;</span><br><span class="line">                                                 //状态改变上报一次</span><br><span class="line">                                                 if(ReedSwitch!= Envent.DoorSta)</span><br><span class="line">                                                &#123;</span><br><span class="line">                                                                Envent.DoorSta =ReedSwitch;</span><br><span class="line">                                                                 if(WirPro.ParaMode== 1 &amp;&amp; ReedSwitchOn ==ReedSwitch)</span><br><span class="line">                                                                &#123;</span><br><span class="line">                                                                                 BELLON;</span><br><span class="line">                                                                                 delay_ms(200);</span><br><span class="line">                                                                                 delay_ms(100);</span><br><span class="line">                                                                                 BELLOFF;</span><br><span class="line">                                                                                 TimeDelayUp=0;</span><br><span class="line">                                                                &#125;</span><br><span class="line">                                                                Envent.DeviceUp =0;</span><br><span class="line">                                                                Envent.CtrlUpSend =VALID_FLAG;</span><br><span class="line">                                                                </span><br><span class="line">                                                                Envent.Si24R1Sleep =25;</span><br><span class="line">                                                &#125;</span><br><span class="line">                                                </span><br><span class="line">                                &#125;</span><br><span class="line">                                 else if (Envent.Si24R1Sleep&gt;=25) //5s</span><br><span class="line">                                &#123;</span><br><span class="line">                                                Envent.Si24R1Sleep =0;</span><br><span class="line">                                                Envent.Si24R1Work =50;//50ms</span><br><span class="line">                                &#125;</span><br><span class="line">                                R_WDT_Restart();</span><br><span class="line">               &#125; </span><br><span class="line">               SI24R1_PowerOn();</span><br><span class="line">                ...............</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最后对系统的功能进行整体调试，得到的待机模式下工作电流为6微安左右。无线发射和接收时有15mA，蜂鸣器工作时，最高有37mA。</p>
<p>基本满足要求设计。不过还需要继续完善。</p>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2016/08/3328869344.png" alt="效果图"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git基本命令推送到github]]></title>
      <url>http://rayuu.com/2016/07/29/git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h1 id="使用git上传下载github上的代码"><a href="#使用git上传下载github上的代码" class="headerlink" title="使用git上传下载github上的代码"></a>使用git上传下载github上的代码</h1><blockquote>
<p>1、安装git<br>2、在本地创建ssh key</p>
</blockquote>
<a id="more"></a>
<pre><code>ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;
</code></pre><p>比如 <code>ssh-keygen -t rsa -C &quot;rayu@engineer.com&quot;</code></p>
<p>邮箱就是你的github邮箱。<br>之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。<br>成功的话会在~/下生成.ssh文件夹，进去，打开id_rsa.pub，复制里面的key。<br>回到github，进入Account Settings，左边选择SSH Keys，Add SSH Key,title随便填，粘贴key。<br>添加完成。</p>
<blockquote>
<p>3、连接到github</p>
</blockquote>
<pre><code>ssh -T git@github.com
</code></pre><p>输入一个yes,会看到：<code>You’ve successfully authenticated, but GitHub does not provide shell access</code> 。这就表示已成功连上github。</p>
<blockquote>
<p>4、设置常用的用户名和密码</p>
</blockquote>
<pre><code>git config --global user.name &quot;your name&quot;
git config --global user.email &quot;your_email@youremail.com&quot;
</code></pre><p>这里的用户名和邮箱分别是github的用户名和邮箱。</p>
<blockquote>
<p>5、进入仓库</p>
</blockquote>
<pre><code>git remote add origin git@github.com:yourName/yourRepo.git
</code></pre><p> 后面的yourName和yourRepo表示你再github的用户名和刚才新建的仓库，加完之后进入.git目录，打开config，这里会多出一个remote “origin”内容，这就是刚才添加的远程地址，也可以直接修改config来配置远程地址。</p>
<blockquote>
<p>6、提交上传</p>
</blockquote>
<p>接下来在本地仓库里添加一些文件，比如README，</p>
<pre><code>git add README
#git add .
touch git.md
git commit -m &quot;first commit&quot;
</code></pre><p>上传到github：</p>
<pre><code>git push origin master
</code></pre><p>   <code>git push</code>命令会将本地仓库推送到远程服务器。<br>   <code>git pull</code>命令则相反。</p>
<p>使用<code>git status</code>可以查看文件的差别，<br>使用<code>git add</code>添加要commit的文件，<br>之后<code>git commit</code>提交本次修改，<code>git push</code>上传到github。<br>或者<code>git push origin master</code></p>
<blockquote>
<p>7、克隆仓库</p>
</blockquote>
<p>找到想要克隆的仓库。</p>
<pre><code>git clone git@github.com:AloneMonkey/weekly.git
</code></pre><p>提交上传的命令见第六步。</p>
<h1 id="PS"><a href="#PS" class="headerlink" title="PS:"></a>PS:</h1><h3 id="一、hexo新建md文件的命令是："><a href="#一、hexo新建md文件的命令是：" class="headerlink" title="一、hexo新建md文件的命令是："></a>一、hexo新建md文件的命令是：</h3><pre><code>hexo new &quot;git&quot;
</code></pre><p>会自带md后缀，哈哈，然后<code>hexo d -g</code></p>
<h3 id="二、出现错误解决方法"><a href="#二、出现错误解决方法" class="headerlink" title="二、出现错误解决方法"></a>二、出现错误解决方法</h3><pre><code>Please, commit your changes or stash them before you can merge.
Aborting
</code></pre><p><code>git pull</code>时出现上述情况，解决方法如下：</p>
<p>这是因为如果系统中有一些配置文件在服务器上做了配置修改,然后后续开发又新添加一些配置项的时候,<br>在发布这个配置文件的时候,会发生代码冲突:</p>
<p>如果希望保留生产服务器上所做的改动,仅仅并入新配置项, 处理方法如下:</p>
<pre><code>git stash 
git pull 
git stash pop
</code></pre><p>然后可以使用<code>git diff -w +文件名</code> 来确认代码自动合并的情况.</p>
<p>反过来,如果希望用代码库中的文件完全覆盖本地工作版本. 方法如下:</p>
<pre><code>git reset --hard 
git pull
</code></pre><p>其中git reset是针对版本,如果想针对文件回退本地修改,使用<br> git checkout HEAD file/to/restore  </p>
<p> 进阶：</p>
<pre><code>git stash save &quot;work in progress for foo feature&quot;
</code></pre><p>当你多次使用’git stash’命令后，你的栈里将充满了未提交的代码，这时候你会对将哪个版本应用回来有些困惑，</p>
<p>’<code>git stash list</code>’ 命令可以将当前的Git栈信息打印出来，<br>你只需要将找到对应的版本号，<br>例如使用’git stash apply stash@{1}’<br>就可以将你指定版本号为stash@{1}的工作取出来，<br>当你将所有的栈都应用回来的时候，可以使用’<code>git stash clear</code>’来将栈清空。</p>
<p>转自：<a href="http://blog.csdn.net/wh_19910525/article/details/7784901" target="_blank" rel="external">http://blog.csdn.net/wh_19910525/article/details/7784901</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[windows右键添加cmd菜单]]></title>
      <url>http://rayuu.com/2016/06/01/cmdhere/</url>
      <content type="html"><![CDATA[<p>windows右键添加cmd菜单</p>
<p>在windows右键添加cmd菜单，如下图。<br>原文地址：<a href="http://blog.rayuu.com/cmdhere.html" target="_blank" rel="external">http://blog.rayuu.com/cmdhere.html</a><br><a id="more"></a></p>
<p><img src="http://7xlqnm.com1.z0.glb.clouddn.com/2016/06/3150704417.jpg" alt="效果图"></p>
<p>这样使用cmd进入某个路径就方便多了！！！！</p>
<h1 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h1><h1 id="1、创建一个记事本文件，将以下文字复制进去，然后保存。"><a href="#1、创建一个记事本文件，将以下文字复制进去，然后保存。" class="headerlink" title="1、创建一个记事本文件，将以下文字复制进去，然后保存。"></a>1、创建一个记事本文件，将以下文字复制进去，然后保存。</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00 </span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\cmdhere] </span><br><span class="line">@=<span class="string">"Cmd&amp;Here"</span></span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\cmdhere\<span class="built_in">command</span>] </span><br><span class="line">@=<span class="string">"cmd.exe /c start cmd.exe /k pushd \"%l \\..\" "</span></span><br><span class="line">[HKEY_CLASSES_ROOT\Folder\shell\cmdhere] </span><br><span class="line">@=<span class="string">"Cmd&amp;Here"</span></span><br><span class="line">[HKEY_CLASSES_ROOT\Folder\shell\cmdhere\<span class="built_in">command</span>] </span><br><span class="line">@=<span class="string">"cmd.exe /c start cmd.exe /k pushd \"%l\" "</span></span><br></pre></td></tr></table></figure>
<h1 id="2、将记事本的文件的后缀-txt-改成-reg。"><a href="#2、将记事本的文件的后缀-txt-改成-reg。" class="headerlink" title="2、将记事本的文件的后缀 txt 改成 reg。"></a>2、将记事本的文件的后缀 txt 改成 reg。</h1><h1 id="3、双击运行这个文件，提示添加注册表项，选择“是”。"><a href="#3、双击运行这个文件，提示添加注册表项，选择“是”。" class="headerlink" title="3、双击运行这个文件，提示添加注册表项，选择“是”。"></a>3、双击运行这个文件，提示添加注册表项，选择“是”。</h1><h1 id="4、然后再随便找个文件，点击右键，可以看见多了一个“cmdhere”的菜单，如上图所示！"><a href="#4、然后再随便找个文件，点击右键，可以看见多了一个“cmdhere”的菜单，如上图所示！" class="headerlink" title="4、然后再随便找个文件，点击右键，可以看见多了一个“cmdhere”的菜单，如上图所示！"></a>4、然后再随便找个文件，点击右键，可以看见多了一个“cmdhere”的菜单，如上图所示！</h1><p>点进去就是命令行了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[将hexo博客同时托管到github和coding]]></title>
      <url>http://rayuu.com/2016/05/29/git-coding/</url>
      <content type="html"><![CDATA[<h1 id="将hexo博客同时托管到github和coding"><a href="#将hexo博客同时托管到github和coding" class="headerlink" title="将hexo博客同时托管到github和coding"></a>将hexo博客同时托管到github和coding</h1><p>发现百度的sitemap.xml抓取不到github上面的，所以今天又弄了一个coding。</p>
<p>在个人设置里面添加好公钥后，本地git登录</p>
<p>然后在站点配置文件<code>_config.yml</code>里面配置如下：</p>
<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  <span class="comment">#repository: https://github.com/Rayuu/Rayuu.github.io.git</span></span><br><span class="line">  <span class="comment">#branch: master</span></span><br><span class="line">  repo:</span><br><span class="line">    github: git@github.com:Rayuu/Rayuu.github.io.git,master</span><br><span class="line">    coding: git@git.coding.net:chay/chay.git,coding-pages</span><br></pre></td></tr></table></figure>
<p>接下来<code>git bash</code>到站点目录</p>
<p>最后</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>
<p>没有报错说明完成，添加密钥后也不用每次输入密码了。</p>
<p>这样就完美了哦！</p>
<h1 id="—————我是分割线—————"><a href="#—————我是分割线—————" class="headerlink" title="—————我是分割线—————"></a>—————我是分割线—————</h1><p>今天重装了系统，感觉整个人都好多了。哈哈哈（#滑稽）<br>重新部署hexo</p>
<p>先安装<code>hexo</code>，<br>再安装<code>nodejs,git</code><br>接着安装<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo</span><br></pre></td></tr></table></figure></p>
<p>找个文件夹打开 git bash here<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">cnpm install hexo-deployer-git --save</span><br><span class="line">cnpm install hexo-generator-sitemap --save</span><br><span class="line">cnpm install hexo-generator-baidu-sitemap --save</span><br><span class="line">cnpm install hexo-generator-search --save</span><br></pre></td></tr></table></figure></p>
<p>把备份的公钥文件夹放到<code>C:\Users\用户名\.ssh</code>下面<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@git.coding.net</span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p>
<p>让服务器使用<code>ssh</code>协议。<br>成功的话就一切正常。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure></p>
<p>上传！！！搞定。。。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[随笔]]></title>
      <url>http://rayuu.com/2016/05/28/2015-03-19-first/</url>
      <content type="html"><![CDATA[<p>一年后，我又在<code>github</code>上搭起了博客，虽然搬瓦工也买了一年的服务器。<br>它的地址是<a href="http://blog.rayuu.com/" title="rayu技术分享" target="_blank" rel="external">http://blog.rayuu.com/</a></p>
<a id="more"></a>
<ul>
<li>Rayu 2016-05-28 </li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[centos6.4从python2.6升级python2.7.9]]></title>
      <url>http://rayuu.com/2016/05/25/cetos-python-update/</url>
      <content type="html"><![CDATA[<h1 id="原文地址：-http-blog-rayuu-com-86-html"><a href="#原文地址：-http-blog-rayuu-com-86-html" class="headerlink" title="原文地址： http://blog.rayuu.com/86.html"></a>原文地址： <a href="http://blog.rayuu.com/86.html" title="centos6.4从python2.6升级python2.7.9" target="_blank" rel="external">http://blog.rayuu.com/86.html</a></h1><p>centos6.4系统自带的python版本是2.6，用起来不是很方便。</p>
<p>于是今天我又开始折腾了。</p>
<p>首先看一下系统的版本</p>
<h1 id="lsb-release-a"><a href="#lsb-release-a" class="headerlink" title="lsb_release -a"></a>lsb_release -a</h1><p>发现是centos6.4</p>
<a id="more"></a>
<p>再查看python版本</p>
<h1 id="python-V"><a href="#python-V" class="headerlink" title="python  -V"></a>python  -V</h1><p>Python 2.6.6<br>下面开始升级，下载源码自己编译。。。。。</p>
<p>操作步骤如下：</p>
<p>1）安装devtoolset</p>
<p>yum groupinstall “Development tools”<br>2）安装编译Python需要的包包</p>
<p>yum install zlib-devel<br>yum install bzip2-devel<br>yum install openssl-devel<br>yum install ncurses-devel<br>yum install sqlite-devel</p>
<p>3）下载并解压Python 2.7.9的源代码</p>
<p>cd /opt<br>wget –no-check-certificate <a href="https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tar.xz" target="_blank" rel="external">https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tar.xz</a><br>tar xf Python-2.7.9.tar.xz<br>cd Python-2.7.9<br>4）编译与安装Python 2.7.9</p>
<p>./configure –prefix=/usr/local<br>make &amp;&amp; make altinstall<br>5）将python命令指向Python 2.7.9</p>
<p>ln -s /usr/local/bin/python2.7 /usr/local/bin/python   //这句好像没什么用。。。</p>
<p>#mv /usr/bin/python /usr/bin/python2.6  </p>
<p>#ln -s /usr/local/bin/python2.7 /usr/bin/python<br>6）重新检验Python 版本</p>
<p>#python -V<br>7）解决系统 Python 软链接指向 Python2.7 版本后，因为yum是不兼容 Python 2.7的，所以yum不能正常工作，我们需要指定 yum 的Python版本</p>
<p>#vi /usr/bin/yum  </p>
<p>将文件头部的</p>
<p>#!/usr/bin/python</p>
<p>改成</p>
<p>#!/usr/bin/python2.6<br>保存并退出大功告成。。。。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[cordova+ionic跨平台应用]]></title>
      <url>http://rayuu.com/2016/05/22/cordova2/</url>
      <content type="html"><![CDATA[<h1 id="原文地址：-http-blog-rayuu-com-cordova2-html"><a href="#原文地址：-http-blog-rayuu-com-cordova2-html" class="headerlink" title="原文地址： http://blog.rayuu.com/cordova2.html"></a>原文地址： <a href="http://blog.rayuu.com/cordova2.html" title="cordova+ionic跨平台应用" target="_blank" rel="external">http://blog.rayuu.com/cordova2.html</a></h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[cordova入门]]></title>
      <url>http://rayuu.com/2016/05/18/cordova1/</url>
      <content type="html"><![CDATA[<h1 id="原文地址：-http-blog-rayuu-com-cordova1-html"><a href="#原文地址：-http-blog-rayuu-com-cordova1-html" class="headerlink" title="原文地址： http://blog.rayuu.com/cordova1.html"></a>原文地址： <a href="http://blog.rayuu.com/cordova1.html" title="cordova入门" target="_blank" rel="external">http://blog.rayuu.com/cordova1.html</a></h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[51单片机三线串行驱动12864液晶]]></title>
      <url>http://rayuu.com/2016/05/17/12864lecd/</url>
      <content type="html"><![CDATA[<h1 id="原文地址：-http-blog-rayuu-com-12864lcd-html"><a href="#原文地址：-http-blog-rayuu-com-12864lcd-html" class="headerlink" title="原文地址： http://blog.rayuu.com/12864lcd.html"></a>原文地址： <a href="http://blog.rayuu.com/12864lcd.html" title="51单片机三线串行驱动12864液晶" target="_blank" rel="external">http://blog.rayuu.com/12864lcd.html</a></h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[typecho微信助手]]></title>
      <url>http://rayuu.com/2016/05/12/wechat/</url>
      <content type="html"><![CDATA[<h1 id="原文地址：-http-blog-rayuu-com-typewechat-html"><a href="#原文地址：-http-blog-rayuu-com-typewechat-html" class="headerlink" title="原文地址： http://blog.rayuu.com/typewechat.html"></a>原文地址： <a href="http://blog.rayuu.com/typewechat.html" title="typecho微信助手" target="_blank" rel="external">http://blog.rayuu.com/typewechat.html</a></h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[16led摇摇棒]]></title>
      <url>http://rayuu.com/2016/05/09/16led/</url>
      <content type="html"><![CDATA[<h1 id="原文地址：-http-blog-rayuu-com-16led-html"><a href="#原文地址：-http-blog-rayuu-com-16led-html" class="headerlink" title="原文地址： http://blog.rayuu.com/16led.html"></a>原文地址： <a href="http://blog.rayuu.com/16led.html" title="16led摇摇棒" target="_blank" rel="external">http://blog.rayuu.com/16led.html</a></h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CET4、6级无证查询99接口]]></title>
      <url>http://rayuu.com/2016/05/03/cetnoticket/</url>
      <content type="html"><![CDATA[<h1 id="原文地址：-http-blog-rayuu-com-cetnoticket-html"><a href="#原文地址：-http-blog-rayuu-com-cetnoticket-html" class="headerlink" title="原文地址： http://blog.rayuu.com/cetnoticket.html"></a>原文地址： <a href="http://blog.rayuu.com/cetnoticket.html" title="CET4、6级无证查询99接口" target="_blank" rel="external">http://blog.rayuu.com/cetnoticket.html</a></h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派折腾之旅（三）]]></title>
      <url>http://rayuu.com/2015/08/05/2015-08-05-pi3/</url>
      <content type="html"><![CDATA[<p>###暑假放假了，做了一个wifi小车。</p>
<p>先是搭硬件，小车，电机驱动，稳压，电池什么的。</p>
<p>此处略去很多字。</p>
<p>既然是wifi小车，首先要让车跑起来。</p>
<p>让车跑，首先要控制I/O口。</p>
<p>用的是python的GPIO口的库。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-dev</span><br><span class="line"><span class="comment"># 下载 </span></span><br><span class="line">$ wget http://raspberry-gpio-python.googlecode.com/files/RPi.GPIO-0.5.3a.tar.gz</span><br><span class="line"><span class="comment"># 解压缩 </span></span><br><span class="line">$ tar xvzf RPi.GPIO-0.5.3a.tar.gz </span><br><span class="line"><span class="comment"># 进入解压之后的目录 </span></span><br><span class="line">$ <span class="built_in">cd</span> RPi.GPIO-0.5.3a </span><br><span class="line"><span class="comment"># 启动安装 </span></span><br><span class="line">$ sudo python setup.py install</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>然后进入python界面<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO</span><br></pre></td></tr></table></figure></p>
<p>没有报错则说明安装成功。</p>
<p>下面就是用I/O口控制小车了。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> RPi.GPIO <span class="keyword">as</span> GPIO  </span><br><span class="line"><span class="keyword">import</span> time  </span><br><span class="line">GPIO.setmode(GPIO.BOARD)   </span><br><span class="line">GPIO.setup(<span class="number">11</span>, GPIO.OUT) </span><br><span class="line">GPIO.setup(<span class="number">12</span>, GPIO.OUT) </span><br><span class="line">GPIO.setup(<span class="number">15</span>, GPIO.OUT) </span><br><span class="line">GPIO.setup(<span class="number">16</span>, GPIO.OUT)</span><br><span class="line">in11 = GPIO.PWM(<span class="number">11</span>, <span class="number">50</span>)</span><br><span class="line">in12 = GPIO.PWM(<span class="number">12</span>, <span class="number">50</span>)</span><br><span class="line">in21 = GPIO.PWM(<span class="number">15</span>, <span class="number">50</span>)</span><br><span class="line">in22 = GPIO.PWM(<span class="number">16</span>, <span class="number">50</span>) </span><br><span class="line">shudu=<span class="number">30</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">yanshi</span><span class="params">(t)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> t&gt;<span class="number">0</span>:</span><br><span class="line">        t=t<span class="number">-1</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">houtui</span><span class="params">()</span>:</span></span><br><span class="line">    in11.start(<span class="number">30</span>)</span><br><span class="line">    in12.start(<span class="number">0</span>)</span><br><span class="line">    in21.start(<span class="number">30</span>)</span><br><span class="line">    in22.start(<span class="number">0</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tingzhi</span><span class="params">()</span>:</span></span><br><span class="line">    in11.stop()</span><br><span class="line">    in12.stop()</span><br><span class="line">    in21.stop()</span><br><span class="line">    in22.stop()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">zhizou1</span><span class="params">()</span>:</span></span><br><span class="line">    in11.start(<span class="number">0</span>)</span><br><span class="line">    in12.start(<span class="number">30</span>)</span><br><span class="line">    in21.start(<span class="number">0</span>)</span><br><span class="line">    in22.start(<span class="number">30</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">zhizou</span><span class="params">()</span>:</span></span><br><span class="line">    in11.start(<span class="number">0</span>)</span><br><span class="line">    in12.start(shudu)</span><br><span class="line">    in21.start(<span class="number">0</span>)</span><br><span class="line">    in22.start(shudu)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">youzhuan</span><span class="params">()</span>:</span></span><br><span class="line">    in11.start(<span class="number">0</span>)</span><br><span class="line">    in12.start(<span class="number">30</span>)</span><br><span class="line">    in21.start(<span class="number">30</span>)</span><br><span class="line">    in22.start(<span class="number">0</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">zuozhuan</span><span class="params">()</span>:</span></span><br><span class="line">    in11.start(<span class="number">30</span>)</span><br><span class="line">    in12.start(<span class="number">0</span>)</span><br><span class="line">    in21.start(<span class="number">0</span>)</span><br><span class="line">    in22.start(<span class="number">30</span>)  </span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>: </span><br><span class="line">    fangxiang=raw_input()</span><br><span class="line">    <span class="keyword">if</span> fangxiang==<span class="string">'q'</span>:</span><br><span class="line">        shudu=shudu+<span class="number">10</span></span><br><span class="line">        zhizou()</span><br><span class="line">    <span class="keyword">elif</span> fangxiang==<span class="string">'e'</span>:</span><br><span class="line">        shudu=shudu<span class="number">-10</span></span><br><span class="line">        zhizou()</span><br><span class="line">    <span class="keyword">elif</span> fangxiang==<span class="string">'w'</span>:</span><br><span class="line">	    zhizou1()</span><br><span class="line">    <span class="keyword">elif</span> fangxiang==<span class="string">'a'</span>:</span><br><span class="line">        t=<span class="number">30000</span></span><br><span class="line">        <span class="keyword">while</span> t&gt;<span class="number">0</span>:</span><br><span class="line">            t=t<span class="number">-1</span></span><br><span class="line">	        zuozhuan()</span><br><span class="line">            tingzhi()</span><br><span class="line">    <span class="keyword">elif</span> fangxiang==<span class="string">'s'</span>:</span><br><span class="line">	    houtui()</span><br><span class="line">    <span class="keyword">elif</span> fangxiang==<span class="string">'d'</span>:</span><br><span class="line">        t=<span class="number">30000</span></span><br><span class="line">        <span class="keyword">while</span> t&gt;<span class="number">0</span>:</span><br><span class="line">            t=t<span class="number">-1</span></span><br><span class="line">	        youzhuan()</span><br><span class="line">            tingzhi()</span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">	    tingzhi()</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派折腾之旅（一）]]></title>
      <url>http://rayuu.com/2015/06/06/2015-06-06-pi1/</url>
      <content type="html"><![CDATA[<h6 id="买了一星期的树莓派今天终于有时间折腾了。"><a href="#买了一星期的树莓派今天终于有时间折腾了。" class="headerlink" title="买了一星期的树莓派今天终于有时间折腾了。"></a>买了一星期的树莓派今天终于有时间折腾了。</h6><h6 id="早上一大早就起来，弄了一天。嘿嘿！"><a href="#早上一大早就起来，弄了一天。嘿嘿！" class="headerlink" title="早上一大早就起来，弄了一天。嘿嘿！"></a>早上一大早就起来，弄了一天。嘿嘿！</h6><h6 id="昨天把系统下载下来了。"><a href="#昨天把系统下载下来了。" class="headerlink" title="昨天把系统下载下来了。"></a>昨天把系统下载下来了。</h6><h6 id="树莓派官方-Raspbian-系统下载：http-www-raspberrypi-org-downloads"><a href="#树莓派官方-Raspbian-系统下载：http-www-raspberrypi-org-downloads" class="headerlink" title="树莓派官方 Raspbian 系统下载：http://www.raspberrypi.org/downloads"></a>树莓派官方 Raspbian 系统下载：<a href="http://www.raspberrypi.org/downloads" target="_blank" rel="external">http://www.raspberrypi.org/downloads</a></h6><p>首先开始烧系统到内存卡。用win32disk imager</p>
<a id="more"></a>
<p>官网下载地址 <a href="http://sourceforge.net/projects/win32diskimager/" target="_blank" rel="external">http://sourceforge.net/projects/win32diskimager/</a></p>
<p><img src="http://imglf0.ph.126.net/uaBktU2DB37gHaRr8Zqs7w==/6630829171676724435.jpg" alt=""></p>
<p>然后就到上图所示的界面了。</p>
<p>点击<code>write</code>就开始烧写到内存卡了。</p>
<p>我开始还很二逼的点了<code>read</code>，苦苦的等了十几分钟发现内存卡还是空的，我的内心几乎是崩溃的。</p>
<p>记得一定要点<code>write</code>哦！</p>
<p>烧写完成，把内存卡插到树莓派上面。</p>
<p>插上网线，通电。</p>
<p>通过路由器查看raspberry设备的ip地址，然后ssh登上raspberry。</p>
<p>因为树莓派默认开启了ssh，所以可以直接连上哦！</p>
<p>默认账号和密码分别是：<code>pi</code>和<code>raspberry</code> </p>
<p>接着可以把root权限打开</p>
<pre><code>sudo passwd root
</code></pre><p>输入2次密码就行了。</p>
<p>然后进入如下界面：</p>
<p>第一次用 root 登录，会自动弹出树莓派的高级设置面板（以后也可以通过 <code>raspi-config</code> 命令进入）：</p>
<p><img src="http://imglf1.ph.126.net/vGsx9c9n3n4o8LNBnvAzwQ==/6630619164955821229.jpg" alt=""></p>
<p>选择第一项 <code>Expand Filesystem</code> 扩展 SD 卡上可用的空间，不然以后会有很多大软件，不能安装（提示空间不足，例如 mysql）。<br>扩展之后可以通过 <code>df -h</code> 命令看到效果~</p>
<p>第二项是修改密码。</p>
<p><img src="http://imglf1.ph.126.net/YXUYDk6Ycyt4_QVifKwFcg==/6630867654583694509.jpg" alt=""></p>
<p>第五项是开启摄像头。可以自己都试一试。</p>
<p>然后最好更改一下软件源，因为在国内毕竟要快一些。</p>
<p>树莓派官方有提供一个镜像列表：<a href="http://www.raspbian.org/RaspbianMirrors" target="_blank" rel="external">http://www.raspbian.org/RaspbianMirrors</a>  里面有很多中国的镜像。</p>
<p>然后 <code>vi /etc/apt/sources.list</code></p>
<p>改为</p>
<pre><code>deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi

deb-src http://mirrors.ustc.edu.cn/raspbian/raspbian/ wheezy main contrib non-free rpi
</code></pre><p>按下ESC键，再按下wq  回车，就保存退出了。</p>
<p>下面<code>apt-get update</code>一下吧。</p>
<p><img src="http://imglf1.ph.126.net/ZcSUFGPHOZ3BchkYanQRjA==/6630282714397345666.jpg" alt=""></p>
<p>然后我觉得网线连着不方便，所以就配置了无线网卡。</p>
<pre><code>vi /etc/network/interfaces
</code></pre><p>修改下面的代码，自行配制连上你的路由器。</p>
<pre><code>iface wlan0 inet static

wpa-ssid Your_Wifi_SSID

wpa-psk Your_Wifi_Password

address 192.168.1.200 # 设定的静态IP地址

netmask 255.255.255.0 # 网络掩码

gateway 192.168.1.1   # 网关

network 192.168.1.1   # 网络地址

#wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf
</code></pre><p>然后拔掉网线，重启restart，开机就是无线上网了。很高兴是吧。</p>
<p>后面我又安装了lamp</p>
<p>步骤如下：</p>
<p>搭建lamp环境，<code>apt-get install apache2 mysql-server php5</code></p>
<p>修改apache2权限，<code>chmod 777 /var/www/</code></p>
<p>安装phpmyadmin,<code>apt-get intstall phpmyadmin</code></p>
<p>选apache2 </p>
<p>链接到apache2目录，<code>ln -s /usr/share/phpmyadmin /var/www/</code></p>
<p>在浏览器访问树莓派ip地址检查是否成功。并检查phpmyadmin可以进否。</p>
<p>下面我开始研究GPIO口的配置。说出来又是一把心酸一把泪。</p>
<p><img src="http://imglf0.ph.126.net/d4xawoSjs6x4LCvm75neOw==/6630780793165104597.jpg" alt=""><br>上面是GPIO口的分布。</p>
<p>我在网上找了一下python的程序。</p>
<p>先要安装RPi.GPIO</p>
<p><a href="http://sourceforge.net/projects/raspberry-gpio-python/" target="_blank" rel="external">http://sourceforge.net/projects/raspberry-gpio-python/</a></p>
<p>从这上面下载</p>
<p>然后我是通过winscp把文件复制到板子里面去的。</p>
<p>后来发现<code>sudo apt-get install python-rpi.gpio</code>这个命令也可以安装</p>
<p>安装成功以后运行python</p>
<p>输入</p>
<pre><code>import RPi.GPIO as GPIO  
</code></pre><p>注意RPi  i是小写的，白天就找了半天的错误。</p>
<p>没有错误的话就说明安装成功了。</p>
<p>然后就可以写个简单的程序。点亮一个流水灯。</p>
<p>开始在网上找的程序都不能用，我也恨郁闷啊。</p>
<p>因为</p>
<pre><code>GPIO.setmode(GPIO.BOARD)
</code></pre><p>这句话报错。</p>
<p>后来想一想还是靠自己，于是我用python help  对RPi.GPIO的用法进行查看，发现这个函数都没有了。可能是因为硬件的更新吧。</p>
<p>于是我就注释了这条代码。</p>
<p>发现下面还有几条不能用。</p>
<p>这是多么的纠结啊。</p>
<p>所以我又继续改。</p>
<p>最后</p>
<pre><code>GPIO.setup(11, GPIO.OUT)  

while True:  

    GPIO.output(11, 1)  

    time.sleep(1)  

    GPIO.output(11, 0)  

    time.sleep(1)
</code></pre><p>这样写就没问题了，接在板子上的led灯也一秒一秒的闪烁了。</p>
<p>真是喜大普奔啊。啊哈哈~~~！</p>
<p>好吧就先写到这里。</p>
<p>其实我下午还弄了摄像头监控。</p>
<p>但是效果不太好。晚上如果还有时间的话我就继续写。</p>
<p>先吃个饭洗个澡去啦。</p>
<p>啦啦啦！！~</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[树莓派折腾之旅（二）]]></title>
      <url>http://rayuu.com/2015/06/06/2015-06-06-pi2/</url>
      <content type="html"><![CDATA[<p>######昨天说到了GPIO口的配置，今天有空就再说一说摄像头吧。</p>
<p>######我是参考的这个帖子做的</p>
<p><a href="http://www.shumeipai.net/forum.php?mod=viewthread&amp;tid=18882" target="_blank" rel="external">http://www.shumeipai.net/forum.php?mod=viewthread&amp;tid=18882</a></p>
<p>插上摄像头可以看见usbvideo0.</p>
<p>接下来安装</p>
<pre><code>sudo apt-get install subversion

sudo apt-get install libv4l-dev

sudo apt-get install libjpeg8-dev

sudo apt-get install imagemagick
</code></pre><a id="more"></a>
<p>到上面这些步骤都没有错。</p>
<p>下面下载的是<code>mipg-steamer</code>软件，编译并安装。</p>
<p>那个帖子里面的下载地址都过期了，所以我就重新百度 google找啊找。</p>
<p>在网上搜<code>mjpg-streamer</code>搜出一个mjpg-streamer-r63，这个包始终编译不成功，有郁闷了很久。</p>
<p>终于在github上面有一个和帖子说的一样的。</p>
<p>还有在这里也有一个链接<a href="http://pan.baidu.com/share/link?shareid=507341537&amp;uk=84253138" target="_blank" rel="external">http://pan.baidu.com/share/link?shareid=507341537&amp;uk=84253138</a></p>
<p>于是希望重新燃起，</p>
<p>开始编译，建立软连接：<code>sudo ln -s /usr/include/libv4l1-videodev.h /usr/include/linux/videodev.h</code></p>
<p>进入目录并编译：</p>
<pre><code>cd mjpg-streamer
make USE_LIBV4L2=true clean all
</code></pre><p>编译好像是成功了，因为没有报错。</p>
<p>然后执行 <code>sudo  ./start.sh</code></p>
<p>打开浏览器访问，树莓派ip地址:<code>8080</code></p>
<p>发现并没有成功，摄像头并没有出来，多么痛的领悟啊。</p>
<p>很忧桑有木有。</p>
<p>于是又开始找问题，</p>
<p>分析得出以下结论：</p>
<p>摄像头没有打开，但是这不科学啊，设备可以检查到usbvideo0。</p>
<p>摄像头驱动问题，我把摄像头放到windows下发现可以使用。</p>
<p>就是环境问题咯。</p>
<p>所以我一个一个尝试，首先看用摄像头拍照可以不。</p>
<p>结果发现摄像头没有问题。</p>
<p>就是拍出来的照片有点失真。图片如下：</p>
<p><img src="http://imglf0.ph.126.net/kvnPMluEeM1YSALtPk3uBg==/6630796186327897140.jpg" alt=""><br>然后又各种找资料。</p>
<p>找到一个用motion软件做的摄像头识别。好像是专门的网络摄像头监控软件。</p>
<p>嘿嘿，希望还是有的。</p>
<pre><code>sudo apt-get install motion 
</code></pre><p>配置motion，编辑motion.conf文件<br>    sudo vi /etc/motion/motion.conf</p>
<p>找到”control_localhost on “和”webcam_localhost on“这两行，改为以下两行后，保存退出<br>    control_localhost off<br>    webcam_localhost off</p>
<p>运行motion软件，输入<code>motion -n</code></p>
<p>在pc上用浏览器打开 树莓派ip地址:8080</p>
<p>经过我的测试 ie11  和chrome 不可以实现，火狐浏览器可以哦</p>
<p><img src="http://imglf1.ph.126.net/HGjYV7U08iEfU8aLBA2PyQ==/2834453015494321729.jpg" alt=""><br>画面就是上面的这样子咯。</p>
<p>昨天弄了一天效果还可以，感觉很满意。</p>
<p>总结一下吧：</p>
<p>树莓派和以前玩过全志A20差不多，都是烧入操作系统。</p>
<p>直接上操作系统，因为有过这方面的经验，所以折腾起来也就不费事了。</p>
<p>摄像头监控还做的不好，有时间再玩一玩，可能是因为昨天折腾了一天，头很晕，所以后面摄像头的思路不是很清晰。</p>
<p>等暑假再做个wifi小车玩一玩。嘿嘿~~！</p>
<p>还有就是最近的微信公众号效果不错，800多粉丝了。</p>
<p>这几天查成绩功能不可用，还是很不爽的，所以就传了2个游戏让大家玩。</p>
<p>嘿嘿，另外发现小米路由器还是很坑的。</p>
<p>星期五服务器莫名其妙的无法访问，使用的云监控没有报警，原因很奇怪，后来发现是小米路由器不知道什么时候自己把硬盘自动休眠给开启了。害的我找了半天，还以为是网络问题呢。结果把小米路由器的硬盘休眠功能一关闭，服务器就不挂了，正常运行了一天。等查成绩功能教务系统开放了再看一看效果。实在不行就用树莓派当web服务器了。刷个openwrt玩一玩。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux复习笔记（一）]]></title>
      <url>http://rayuu.com/2015/03/22/2015-03-26-Linux1/</url>
      <content type="html"><![CDATA[<h6 id="从今天开始，准备复习一下一些以前学过的linux命令。"><a href="#从今天开始，准备复习一下一些以前学过的linux命令。" class="headerlink" title="从今天开始，准备复习一下一些以前学过的linux命令。"></a>从今天开始，准备复习一下一些以前学过的linux命令。</h6><h6 id="然后好进行后面的学习。"><a href="#然后好进行后面的学习。" class="headerlink" title="然后好进行后面的学习。"></a>然后好进行后面的学习。</h6><ul>
<li>——————————————-<br></li>
</ul>
<h6 id="首先我是在自己的电脑上面安装的虚拟机，因为方便用ssh远程登录。"><a href="#首先我是在自己的电脑上面安装的虚拟机，因为方便用ssh远程登录。" class="headerlink" title="首先我是在自己的电脑上面安装的虚拟机，因为方便用ssh远程登录。"></a>首先我是在自己的电脑上面安装的虚拟机，因为方便用ssh远程登录。</h6><h6 id="系统安装完成后-首先更新源。"><a href="#系统安装完成后-首先更新源。" class="headerlink" title="系统安装完成后,首先更新源。"></a>系统安装完成后,首先更新源。</h6><h6 id="吼吼吼！"><a href="#吼吼吼！" class="headerlink" title="吼吼吼！"></a>吼吼吼！</h6><a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su passwd root</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su xcy</span><br></pre></td></tr></table></figure>
<p>然后是安装ssh<br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssh-server openssh -client</span><br></pre></td></tr></table></figure></p>
<p>安装完成服务端和客户端后，用电脑进行ssh远程登录。<br><br>连接成功。<br><br>回忆起来了一些命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 filename</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd testgroup</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd test1 -g testgroup</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser test2 -g testgroup</span><br></pre></td></tr></table></figure>
<p>其中useradd新建用户在home目录下面没有文件夹，而adduser则有。<br><br>ps -e  查看进程<br><br>kill 3400杀死3400进程<br><br>kill -9 pid process<br><br>mkdir 目录名         =&gt; 创建一个目录<br><br>rmdir 空目录名      =&gt; 删除一个空目录<br><br>rm 文件名 文件名   =&gt; 删除一个文件或多个文件<br><br>rm –rf 非空目录名 =&gt; 删除一个非空目录下的一切<br><br>touch 文件名        =&gt; 创建一个空文件<br><br>重命名文件（夹） / 移动文件（夹）到指定文件夹<br><br>执行格式： mv source destination<br><br>mv file1 file2    =&gt; 将文件 file1，更改文件名为 file2。<br><br>mv file1 dir1    =&gt; 将文件 file1，移到目录 dir1下，文件名仍为 file1。<br><br>mv dir1 dir2    =&gt; 若目录 dir2 存在，则将目录 dir1，及其所有文件和子目录，移到<br>目录 dir2 下，新目录名称为 dir1。若目录 dir2 不存在，则将dir1，及其所有文件和<br>子目录，更改为目录 dir2。<br><br>今天就练到这里。明天继续！加油！<br></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[chrome科学上网]]></title>
      <url>http://rayuu.com/2015/03/22/2015-03-22-chome-science/</url>
      <content type="html"><![CDATA[<ul>
<li><code>chrome</code>科学上网方式</li>
<li>（仅供喜欢折腾的chrome用户使用，使用chrome也是一种信仰。）</li>
<li>由于xxx原因，无法上一些外国网站，比如说上google搜一些学术性的问题等，这是百度比不上的，现在百度搜索一些东西都是推广啊什么的，很恶心的。所以推荐如下科学上网方式。</li>
<li>工具： <code>chrome浏览器+goagent+SwitchySharp</code></li>
</ul>
<a id="more"></a>
<p>   用了几年的chrome了，chrome体验还是很不错的。<br><br>   下面是我从chrome吧里面找的一些资源。<br></p>
<ul>
<li><p>chrome下载地址 (<a href="http://pan.baidu.com/share/link?uk=3508695471&amp;shareid=2338828618" target="_blank" rel="external">http://pan.baidu.com/share/link?uk=3508695471&amp;shareid=2338828618</a>)</p>
</li>
<li><p>然后你可以先替换后斯特斯，这样可以保证你先能进入应用商店<br>(<a href="http://pan.baidu.com/share/link?uk=3508695471&amp;shareid=2772930274" target="_blank" rel="external">http://pan.baidu.com/share/link?uk=3508695471&amp;shareid=2772930274</a>)  解压密码chrome<br></p>
</li>
<li>把上面的hosts解压出来，windows用户找到C:\WINDOWS\system32\drivers\etc下的hosts，替换掉原来的。<br>如果有杀毒提醒，不用管，点信任即可。<br></li>
<li>其他操作系统的hosts位置如下：</li>
<li>Android：/system/etc/hosts</li>
<li><p>Linux及其他类Unix操作系统：/etc</p>
</li>
<li><p>替换完成后，我们发现可以上应用商店，和登录google账号了。</p>
</li>
<li>然后打开应用商店，搜索SwitchySharp，点击添加至chrome。然后在浏览器右上角会出现一个灰色的地球。</li>
<li>然后下载：switchyoptions.bak 链接：(<a href="http://pan.baidu.com/s/1sCw5g" target="_blank" rel="external">http://pan.baidu.com/s/1sCw5g</a>)</li>
<li><p>下面我们来配置，单击那个灰色的地球，点“选项”，然后“导入导出”，接着“从文件恢复”，然后找到刚刚下载的备份文件导入即可。</p>
</li>
<li><p>最后就是配置goagent了。</p>
</li>
<li>下载链接: (<a href="http://pan.baidu.com/s/1mgmSwkg" target="_blank" rel="external">http://pan.baidu.com/s/1mgmSwkg</a>) 密码: 9kvz</li>
<li>解压后在goagent-goagent-b9ff04c文件夹下，打开local目录。然后配置proxy.ini</li>
<li>把里面的appid换成你的gae应用id即可。里面有readme.md，自己可以阅读。</li>
<li>最后用管理员运行goagent.exe即可成功运行。</li>
<li>如果ip还是被封了，那么你还可以下载里面的GoGo Tester2.3.9.exe，搜索ip，然后复制ip到proxy.ini，找到iplisit.  把ip地址放在google_cn=后面，还有google_hk=后面，粘贴2遍即可。</li>
<li>这样配置就完成了。可以轻松打开youtube和facebook等一些网站了。</li>
<li>最后，你还可以在右下角设置ie代理。这样ie浏览器同样也可以上了。</li>
</ul>
]]></content>
    </entry>
    
  
  
</search>
